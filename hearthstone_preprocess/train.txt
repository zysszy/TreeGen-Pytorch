AcidicSwampOoze	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Destroy	your	opponent's	weapon	.
Module	body	ClassDef	name	AcidicSwampOoze	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AcidicSwampOoze	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Destroy	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AncestralHealing	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Restore	a	minion	to	full	Health	and	give	it	<b>	Taunt	</b>	.
Module	body	ClassDef	name	AncestralHealing	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AncestralHealing	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	calculate_max_health	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	taunt	^	^	^	^	value	NameConstant	value	True	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AnimalCompanion	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Summon	a	random	Beast	Companion	.
Module	body	ClassDef	name	AnimalCompanion	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AnimalCompanion	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	beast_list	^	^	^	^	value	List	elts	Call	func	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	cards	^	^	^	^	attr	minions	^	^	^	^	attr	hunter	^	^	^	^	attr	Huffer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	cards	^	^	^	^	attr	minions	^	^	^	^	attr	hunter	^	^	^	^	attr	Misha	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	cards	^	^	^	^	attr	minions	^	^	^	^	attr	hunter	^	^	^	^	attr	Leokk	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Assign	targets	Name	id	card	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	beast_list	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArcaneExplosion	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	1	damage	to	all	enemy	minions	.
Module	body	ClassDef	name	ArcaneExplosion	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArcaneExplosion	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
ArcaneIntellect	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Draw	2	cards	.
Module	body	ClassDef	name	ArcaneIntellect	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArcaneIntellect	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	c	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
ArcaneMissiles	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	3	damage	randomly	split	among	all	enemies	.
Module	body	ClassDef	name	ArcaneMissiles	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArcaneMissiles	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	target	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	damage	^	^	^	^	args	Num	n	1	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
ArcaneShot	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	2	damage	.
Module	body	ClassDef	name	ArcaneShot	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArcaneShot	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArcaniteReaper	NAME_END	5	ATK_END	-1	DEF_END	5	COST_END	2	DUR_END	Weapon	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	ArcaniteReaper	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArcaniteReaper	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	5	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Assassinate	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Destroy	an	enemy	minion	.
Module	body	ClassDef	name	Assassinate	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Assassinate	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Backstab	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	2	damage	to	an	undamaged	minion	.
Module	body	ClassDef	name	Backstab	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Backstab	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	keyword	arg	filter_func	^	^	value	Lambda	args	arguments	args	arg	arg	target	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Name	id	target	^	^	^	^	attr	health	^	^	^	^	ops	Eq	^	^	comparators	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	calculate_max_health	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BlessingOfKings	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	a	minion	+	4	/	+	4	.	<i>	(	+	4	Attack	/	+	4	Health	)	</i>
Module	body	ClassDef	name	BlessingOfKings	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BlessingofKings	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BlessingOfMight	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Give	a	minion	+	3	Attack	.
Module	body	ClassDef	name	BlessingOfMight	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BlessingofMight	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BloodfenRaptor	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	BloodfenRaptor	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BloodfenRaptor	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Bloodlust	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	your	minions	+	3	Attack	this	turn	.
Module	body	ClassDef	name	Bloodlust	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Bloodlust	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	change_temp_attack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
BluegillWarrior	NAME_END	2	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Common	RARITY_END	<b>	Charge	</b>
Module	body	ClassDef	name	BluegillWarrior	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BluegillWarrior	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Boar	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Boar	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Boar	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Charge	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Give	a	friendly	minion	+	2	Attack	and	<b>	Charge	</b>	.
Module	body	ClassDef	name	Charge	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Charge	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	_Charge	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ChillwindYeti	NAME_END	4	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	ChillwindYeti	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ChillwindYeti	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Claw	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Give	your	hero	+	2	Attack	this	turn	and	2	Armor	.
Module	body	ClassDef	name	Claw	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Claw	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	change_temp_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	increase_armor	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Cleave	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	2	damage	to	two	random	enemy	minions	.
Module	body	ClassDef	name	Cleave	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Cleave	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	minions	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	minion	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minions	^	^	^	^	attr	remove	^	^	^	^	args	Name	id	minion	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	GtE	^	^	comparators	Num	n	2	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Consecration	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	2	damage	to	all	enemies	.
Module	body	ClassDef	name	Consecration	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Consecration	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CoreHound	NAME_END	9	ATK_END	5	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	CoreHound	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CoreHound	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	9	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Corruption	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Choose	an	enemy	minion	.	At	the	start	of	your	turn	,	destroy	it	.
Module	body	ClassDef	name	Corruption	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Corruption	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_effect	^	^	^	^	args	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DalaranMage	NAME_END	1	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Spell	Damage	+	1	</b>
Module	body	ClassDef	name	DalaranMage	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DalaranMage	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DivineSpirit	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Double	a	minion's	Health	.
Module	body	ClassDef	name	DivineSpirit	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DivineSpirit	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	health	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DragonlingMechanic	NAME_END	2	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Summon	a	2	/	1	Mechanical	Dragonling	.
Module	body	ClassDef	name	DragonlingMechanic	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DragonlingMechanic	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	MechanicalDragonling	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DrainLife	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	2	damage	.	Restore	#	2	Health	to	your	hero	.
Module	body	ClassDef	name	DrainLife	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DrainLife	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DreadInfernal	NAME_END	6	ATK_END	6	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Deal	1	damage	to	ALL	other	characters	.
Module	body	ClassDef	name	DreadInfernal	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DreadInfernal	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	6	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ElvenArcher	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Deal	1	damage	.
Module	body	ClassDef	name	ElvenArcher	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ElvenArcher	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ExcessMana	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Draw	a	card	.	<i>	(	You	can	only	have	10	Mana	in	your	tray	.	)	</i>
Module	body	ClassDef	name	ExcessMana	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ExcessMana	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Execute	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Destroy	a	damaged	enemy	minion	.
Module	body	ClassDef	name	Execute	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Execute	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_spell_target	^	^	^	^	^	keyword	arg	filter_func	^	^	value	Lambda	args	arguments	args	arg	arg	target	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Name	id	target	^	^	^	^	attr	health	^	^	^	^	ops	NotEq	^	^	comparators	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	calculate_max_health	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FanOfKnives	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	1	damage	to	all	enemy	minions	.	Draw	a	card	.
Module	body	ClassDef	name	FanOfKnives	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FanofKnives	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Fireball	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	6	damage	.
Module	body	ClassDef	name	Fireball	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Fireball	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	6	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Flamestrike	NAME_END	-1	ATK_END	-1	DEF_END	7	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	4	damage	to	all	enemy	minions	.
Module	body	ClassDef	name	Flamestrike	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Flamestrike	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
FlametongueTotem	NAME_END	0	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	Totem	RACE_END	Common	RARITY_END	Adjacent	minions	have	+	2	Attack	.
Module	body	ClassDef	name	FlametongueTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FlametongueTotem	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	Adjacent	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Frog	NAME_END	0	ATK_END	1	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	Frog	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Frog	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FrostNova	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Freeze	</b>	all	enemy	minions	.
Module	body	ClassDef	name	FrostNova	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FrostNova	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Frozen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
FrostShock	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	1	damage	to	an	enemy	character	and	<b>	Freeze	</b>	it	.
Module	body	ClassDef	name	FrostShock	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FrostShock	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Frozen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Frostbolt	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	3	damage	to	a	character	and	<b>	Freeze	</b>	it	.
Module	body	ClassDef	name	Frostbolt	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Frostbolt	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Frozen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FrostwolfGrunt	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	FrostwolfGrunt	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FrostwolfGrunt	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GoldshireFootman	NAME_END	1	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	GoldshireFootman	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GoldshireFootman	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GrimscaleOracle	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Common	RARITY_END	ALL	other	Murlocs	have	+	1	Attack	.
Module	body	ClassDef	name	GrimscaleOracle	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GrimscaleOracle	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GuardianOfKings	NAME_END	5	ATK_END	6	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Restore	6	Health	to	your	hero	.
Module	body	ClassDef	name	GuardianOfKings	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GuardianofKings	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	6	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	6	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GurubashiBerserker	NAME_END	2	ATK_END	7	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	this	minion	takes	damage	,	gain	+	3	Attack	.
Module	body	ClassDef	name	GurubashiBerserker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GurubashiBerserker	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterDamaged	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	MinionIsTarget	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HammerOfWrath	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	3	damage	.	NL	Draw	a	card	.
Module	body	ClassDef	name	HammerOfWrath	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HammerofWrath	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HandOfProtection	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Give	a	minion	<b>	Divine	Shield	</b>	.
Module	body	ClassDef	name	HandOfProtection	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HandofProtection	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	divine_shield	^	^	^	^	value	NameConstant	value	True	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HealingTotem	NAME_END	0	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	Totem	RACE_END	Free	RARITY_END	At	the	end	of	your	turn	,	restore	1	Health	to	all	friendly	minions	.
Module	body	ClassDef	name	HealingTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HealingTotem	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	NameConstant	value	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HealingTouch	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Restore	#	8	Health	.
Module	body	ClassDef	name	HealingTouch	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HealingTouch	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	8	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Hex	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Transform	a	minion	into	a	0	/	1	Frog	with	<b>	Taunt	</b>	.
Module	body	ClassDef	name	Hex	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Hex	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	frog	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	cards	^	^	^	^	attr	minions	^	^	^	^	attr	neutral	^	^	^	^	attr	Frog	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	minion	^	^	^	^	value	Call	func	Attribute	value	Name	id	frog	^	^	^	^	attr	create_minion	^	^	^	^	args	NameConstant	value	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	minion	^	^	^	^	attr	card	^	^	^	^	value	Name	id	frog	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	replace	^	^	^	^	args	Name	id	minion	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HolyLight	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Restore	#	6	Health	.
Module	body	ClassDef	name	HolyLight	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HolyLight	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	6	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HolyNova	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	2	damage	to	all	enemies	.	Restore	#	2	Health	to	all	friendly	characters	.
Module	body	ClassDef	name	HolyNova	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HolyNova	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
HolySmite	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	2	damage	.
Module	body	ClassDef	name	HolySmite	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HolySmite	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Houndmaster	NAME_END	4	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	<b>	Battlecry	</b>	Give	a	friendly	Beast	+	2	/	+	2	and	<b>	Taunt	</b>	.
Module	body	ClassDef	name	Houndmaster	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Houndmaster	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	NONE	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Taunt	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Huffer	NAME_END	4	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Charge	</b>
Module	body	ClassDef	name	Huffer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Huffer	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Humility	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Change	a	minion's	Attack	to	1	.
Module	body	ClassDef	name	Humility	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Humility	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	BinOp	left	Num	n	1	^	^	^	^	op	Sub	^	^	right	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HuntersMark	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Change	a	minion's	Health	to	1	.
Module	body	ClassDef	name	HuntersMark	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HuntersMark	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	set_health_to	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
IronforgeRifleman	NAME_END	2	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Deal	1	damage	.
Module	body	ClassDef	name	IronforgeRifleman	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	IronforgeRifleman	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	NONE	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
IronfurGrizzly	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	IronfurGrizzly	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	IronfurGrizzly	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
KillCommand	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	3	damage	.	If	you	have	a	Beast	,	deal	$	5	damage	instead	.
Module	body	ClassDef	name	KillCommand	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	KillCommand	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	beasts	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_minion_battlecry_target	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Lambda	args	arguments	args	arg	arg	x	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Compare	left	Attribute	value	Attribute	value	Name	id	x	^	^	^	^	attr	card	^	^	^	^	attr	minion_type	^	^	^	^	ops	Is	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Name	id	beasts	^	^	^	^	ops	Is	^	^	comparators	NameConstant	value	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
KoboldGeomancer	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Spell	Damage	+	1	</b>
Module	body	ClassDef	name	KoboldGeomancer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	KoboldGeomancer	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
KorkronElite	NAME_END	4	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Charge	</b>
Module	body	ClassDef	name	KorkronElite	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	KorkronElite	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Leokk	NAME_END	2	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	Your	other	minions	have	+	1	Attack	.
Module	body	ClassDef	name	Leokk	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Leokk	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LightsJustice	NAME_END	1	ATK_END	-1	DEF_END	1	COST_END	4	DUR_END	Weapon	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	LightsJustice	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LightsJustice	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	1	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LordOfTheArena	NAME_END	6	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	LordOfTheArena	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LordoftheArena	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MechanicalDragonling	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	MechanicalDragonling	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MechanicalDragonling	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MindBlast	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	5	damage	to	the	enemy	hero	.
Module	body	ClassDef	name	MindBlast	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MindBlast	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MindControl	NAME_END	-1	ATK_END	-1	DEF_END	10	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Take	control	of	an	enemy	minion	.
Module	body	ClassDef	name	MindControl	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MindControl	^	^	^	Num	n	10	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	new_minion	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	copy	^	^	^	^	args	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	remove_from_board	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	new_minion	^	^	^	^	attr	add_to_board	^	^	^	^	args	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MindVision	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Put	a	copy	of	a	random	card	in	your	opponent's	hand	into	your	hand	.
Module	body	ClassDef	name	MindVision	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MindVision	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Assign	targets	Name	id	card	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	deepcopy	^	^	^	^	args	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	attr	append	^	^	^	^	args	Name	id	card	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	card	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
MirrorImage	NAME_END	0	ATK_END	2	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	MirrorImage	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MirrorImage	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	MirrorImageMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MirrorImage	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Summon	two	0	/	2	minions	with	<b>	Taunt	</b>	.
Module	body	ClassDef	name	MirrorImage	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MirrorImage	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	MirrorImageMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Misha	NAME_END	4	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	Misha	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Misha	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Moonfire	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	1	damage	.
Module	body	ClassDef	name	Moonfire	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Moonfire	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MurlocRaider	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	MurlocRaider	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MurlocRaider	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MurlocScout	NAME_END	1	ATK_END	1	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	MurlocScout	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MurlocScout	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MurlocTidehunter	NAME_END	2	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Summon	a	1	/	1	Murloc	Scout	.
Module	body	ClassDef	name	MurlocTidehunter	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MurlocTidehunter	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	MurlocScout	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Nightblade	NAME_END	4	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	<b>	Battlecry	</b>	Deal	3	damage	to	the	enemy	hero	.
Module	body	ClassDef	name	Nightblade	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Nightblade	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
NorthshireCleric	NAME_END	1	ATK_END	3	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Whenever	a	minion	is	healed	,	draw	a	card	.
Module	body	ClassDef	name	NorthshireCleric	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	NorthshireCleric	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterHealed	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
NoviceEngineer	NAME_END	1	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	<b>	Battlecry	</b>	Draw	a	card	.
Module	body	ClassDef	name	NoviceEngineer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	NoviceEngineer	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
OasisSnapjaw	NAME_END	2	ATK_END	7	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	OasisSnapjaw	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	OasisSnapjaw	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	7	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
OgreMagi	NAME_END	4	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Spell	Damage	+	1	</b>
Module	body	ClassDef	name	OgreMagi	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	OgreMagi	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
RaidLeader	NAME_END	2	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Your	other	minions	have	+	1	Attack	.
Module	body	ClassDef	name	RaidLeader	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RaidLeader	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
RazorfenHunter	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Summon	a	1	/	1	Boar	.
Module	body	ClassDef	name	RazorfenHunter	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RazorfenHunter	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Boar	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
RecklessRocketeer	NAME_END	5	ATK_END	2	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	<b>	Charge	</b>
Module	body	ClassDef	name	RecklessRocketeer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RecklessRocketeer	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
RiverCrocolisk	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	RiverCrocolisk	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RiverCrocolisk	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
RockbiterWeapon	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Give	a	friendly	character	+	3	Attack	this	turn	.
Module	body	ClassDef	name	RockbiterWeapon	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RockbiterWeapon	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_temp_attack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SacrificialPact	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Destroy	a	Demon	.	Restore	#	5	Health	to	your	hero	.
Module	body	ClassDef	name	SacrificialPact	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SacrificialPact	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	keyword	arg	filter_func	^	^	value	Lambda	args	arguments	args	arg	arg	character	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Compare	left	Attribute	value	Attribute	value	Name	id	character	^	^	^	^	attr	card	^	^	^	^	attr	minion_type	^	^	^	^	ops	Eq	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Sap	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Return	an	enemy	minion	to	your	opponent's	hand	.
Module	body	ClassDef	name	Sap	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Sap	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SavageRoar	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	your	characters	+	2	Attack	this	turn	.
Module	body	ClassDef	name	SavageRoar	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SavageRoar	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	change_temp_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	change_temp_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ShadowBolt	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Deal	$	4	damage	to	a	minion	.
Module	body	ClassDef	name	ShadowBolt	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ShadowBolt	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ShadowWordDeath	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Destroy	a	minion	with	an	Attack	of	5	or	more	.
Module	body	ClassDef	name	ShadowWordDeath	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ShadowWordDeath	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	keyword	arg	filter_func	^	^	value	Lambda	args	arguments	args	arg	arg	target	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	And	^	^	values	Compare	left	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	ops	GtE	^	^	comparators	Num	n	5	^	^	^	^	^	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ShadowWordPain	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Destroy	a	minion	with	3	or	less	Attack	.
Module	body	ClassDef	name	ShadowWordPain	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ShadowWordPain	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	keyword	arg	filter_func	^	^	value	Lambda	args	arguments	args	arg	arg	target	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	And	^	^	values	Compare	left	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	ops	LtE	^	^	comparators	Num	n	3	^	^	^	^	^	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ShatteredSunCleric	NAME_END	3	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Give	a	friendly	minion	+	1	/	+	1	.
Module	body	ClassDef	name	ShatteredSunCleric	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ShatteredSunCleric	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Sheep	NAME_END	1	ATK_END	1	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Sheep	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Sheep	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ShieldBlock	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Gain	5	Armor	.	NL	Draw	a	card	.
Module	body	ClassDef	name	ShieldBlock	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ShieldBlock	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	increase_armor	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Shiv	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	1	damage	.	Draw	a	card	.
Module	body	ClassDef	name	Shiv	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Shiv	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SilverHandRecruit	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	SilverHandRecruit	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SilverHandRecruit	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Soulfire	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	4	damage	.	Discard	a	random	card	.
Module	body	ClassDef	name	Soulfire	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Soulfire	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	discard	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Sprint	NAME_END	-1	ATK_END	-1	DEF_END	7	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Draw	4	cards	.
Module	body	ClassDef	name	Sprint	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Sprint	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Starfire	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	5	damage	.	NL	Draw	a	card	.
Module	body	ClassDef	name	Starfire	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Starfire	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StarvingBuzzard	NAME_END	3	ATK_END	2	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	Whenever	you	summon	a	Beast	,	draw	a	card	.
Module	body	ClassDef	name	StarvingBuzzard	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StarvingBuzzard	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionPlaced	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StoneclawTotem	NAME_END	0	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	Totem	RACE_END	Free	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	StoneclawTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StoneclawTotem	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StonetuskBoar	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Free	RARITY_END	<b>	Charge	</b>
Module	body	ClassDef	name	StonetuskBoar	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StonetuskBoar	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StormpikeCommando	NAME_END	4	ATK_END	2	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Deal	2	damage	.
Module	body	ClassDef	name	StormpikeCommando	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StormpikeCommando	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StormwindChampion	NAME_END	6	ATK_END	6	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Your	other	minions	have	+	1	/	+	1	.
Module	body	ClassDef	name	StormwindChampion	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StormwindChampion	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Swipe	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	4	damage	to	an	enemy	and	$	1	damage	to	all	other	enemies	.
Module	body	ClassDef	name	Swipe	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Swipe	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Num	n	4	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	body	If	test	Compare	left	Name	id	minion	^	^	^	^	ops	IsNot	^	^	comparators	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	If	test	Compare	left	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	ops	IsNot	^	^	comparators	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
TimberWolf	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Free	RARITY_END	Your	other	Beasts	have	+	1	Attack	.
Module	body	ClassDef	name	TimberWolf	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TimberWolf	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TotemicMight	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	your	Totems	+	2	Health	.
Module	body	ClassDef	name	TotemicMight	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TotemicMight	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	body	If	test	Compare	left	Attribute	value	Attribute	value	Name	id	minion	^	^	^	^	attr	card	^	^	^	^	attr	minion_type	^	^	^	^	ops	Eq	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Tracking	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Look	at	the	top	three	cards	of	your	deck	.	Draw	one	and	discard	the	others	.
Module	body	ClassDef	name	Tracking	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Tracking	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	cards	^	^	^	^	value	List	elts	empty	^	^	^	^	^	For	target	Name	id	card_index	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	body	If	test	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	can_draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	cards	^	^	^	^	attr	append	^	^	^	^	args	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	deck	^	^	^	^	attr	draw	^	^	^	^	args	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Name	id	cards	^	^	^	^	keywords	empty	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Assign	targets	Name	id	chosen_card	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	agent	^	^	^	^	attr	choose_option	^	^	^	^	args	Name	id	cards	^	^	^	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	attr	append	^	^	^	^	args	Name	id	chosen_card	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Subscript	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	slice	Index	value	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	trigger	^	^	^	^	args	Str	s	card_drawn	^	^	^	Name	id	chosen_card	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
TruesilverChampion	NAME_END	4	ATK_END	-1	DEF_END	4	COST_END	2	DUR_END	Weapon	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	your	hero	attacks	,	restore	2	Health	to	it	.
Module	body	ClassDef	name	TruesilverChampion	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TruesilverChampion	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	4	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterAttack	^	^	^	^	args	Call	func	Name	id	IsHero	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TundraRhino	NAME_END	2	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	Your	Beasts	have	<b>	Charge	</b>	.
Module	body	ClassDef	name	TundraRhino	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TundraRhino	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	Charge	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Vanish	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Return	all	minions	to	their	owner's	hand	.
Module	body	ClassDef	name	Vanish	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Vanish	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Name	id	sorted	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	keyword	arg	key	^	^	value	Lambda	args	arguments	args	arg	arg	m	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Attribute	value	Name	id	m	^	^	^	^	attr	born	^	^	^	^	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Voidwalker	NAME_END	1	ATK_END	3	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Free	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	Voidwalker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Voidwalker	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WarsongCommander	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Whenever	you	summon	a	minion	with	3	or	less	Attack	,	give	it	<b>	Charge	</b>	.
Module	body	ClassDef	name	WarsongCommander	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WarsongCommander	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionPlaced	^	^	^	^	args	Call	func	Name	id	AttackLessThanOrEqualTo	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Charge	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TargetSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WaterElemental	NAME_END	3	ATK_END	6	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Freeze	</b>	any	character	damaged	by	this	minion	.
Module	body	ClassDef	name	WaterElemental	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WaterElemental	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	DidDamage	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Frozen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TargetSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Whirlwind	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	1	damage	to	ALL	minions	.
Module	body	ClassDef	name	Whirlwind	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Whirlwind	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
WickedKnife	NAME_END	1	ATK_END	-1	DEF_END	1	COST_END	2	DUR_END	Weapon	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	NIL
Module	body	ClassDef	name	WickedKnife	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WickedKnife	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WildGrowth	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Gain	an	empty	Mana	Crystal	.
Module	body	ClassDef	name	WildGrowth	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WildGrowth	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	max_mana	^	^	^	^	ops	Lt	^	^	comparators	Num	n	10	^	^	^	^	^	^	body	AugAssign	target	Attribute	value	Name	id	player	^	^	^	^	attr	max_mana	^	^	^	^	op	Add	^	^	value	Num	n	1	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	attr	append	^	^	^	^	args	Call	func	Name	id	ExcessMana	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Subscript	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	slice	Index	value	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Windfury	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	Give	a	minion	<b>	Windfury	</b>	.
Module	body	ClassDef	name	Windfury	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Windfury	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	_Windfury	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Windspeaker	NAME_END	3	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Give	a	friendly	minion	<b>	Windfury	</b>	.
Module	body	ClassDef	name	Windspeaker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Windspeaker	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Windfury	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Wolfrider	NAME_END	3	ATK_END	1	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Free	RARITY_END	<b>	Charge	</b>
Module	body	ClassDef	name	Wolfrider	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Wolfrider	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AlexstraszasChampion	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	If	you're	holding	a	Dragon	,	gain	+	1	Attack	and	<b>	Charge	</b>	.
Module	body	ClassDef	name	AlexstraszasChampion	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AlexstraszasChampion	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Charge	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AncestralKnowledge	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Draw	2	cards	.	<b>	Overload	(	2	)	</b>
Module	body	ClassDef	name	AncestralKnowledge	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AncestralKnowledge	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Num	n	2	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	c	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Anubarak	NAME_END	8	ATK_END	4	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Deathrattle	</b>	Return	this	to	your	hand	and	summon	a	4	/	4	Nerubian	.
Module	body	ClassDef	name	Anubarak	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Anubarak	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	List	elts	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Nerubian	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArcaneBlast	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Deal	$	2	damage	to	a	minion	.	This	spell	gets	double	bonus	from	<b>	Spell	Damage	</b>	.
Module	body	ClassDef	name	ArcaneBlast	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArcaneBlast	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	BinOp	left	Num	n	2	^	^	^	^	op	Add	^	^	right	Attribute	value	Name	id	player	^	^	^	^	attr	spell_damage	^	^	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArgentHorserider	NAME_END	2	ATK_END	1	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Charge	</b>	NL	<b>	Divine	Shield	</b>
Module	body	ClassDef	name	ArgentHorserider	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArgentHorserider	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArgentLance	NAME_END	2	ATK_END	-1	DEF_END	2	COST_END	2	DUR_END	Weapon	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Reveal	a	minion	in	each	deck	.	If	yours	costs	more	,	+	1	Durability	.
Module	body	ClassDef	name	ArgentLance	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArgentLance	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Joust	^	^	^	^	args	Call	func	Name	id	IncreaseDurability	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArgentWatchman	NAME_END	2	ATK_END	4	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Can't	attack	.	NL	<b>	Inspire	</b>	Can	attack	as	normal	this	turn	.
Module	body	ClassDef	name	ArgentWatchman	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArgentWatchman	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	CantAttack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	UsedPower	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	CanAttack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArmoredWarhorse	NAME_END	5	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Reveal	a	minion	in	each	deck	.	If	yours	costs	more	,	gain	<b>	Charge	</b>	.
Module	body	ClassDef	name	ArmoredWarhorse	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArmoredWarhorse	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Joust	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Charge	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HealingTotem	NAME_END	0	ATK_END	2	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	At	the	end	of	your	turn	,	restore	1	Health	to	all	friendly	minions	.
Module	body	ClassDef	name	HealingTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HealingTotem	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	NameConstant	value	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Nerubian	NAME_END	4	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Nerubian	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Nerubian	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SearingTotem	NAME_END	1	ATK_END	1	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	SearingTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SearingTotem	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StoneclawTotem	NAME_END	0	ATK_END	2	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	StoneclawTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StoneclawTotem	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TournamentMedic	NAME_END	1	ATK_END	8	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Inspire	</b>	Restore	2	Health	to	your	hero	.
Module	body	ClassDef	name	TournamentMedic	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TournamentMedic	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	8	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	UsedPower	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WrathOfAirTotem	NAME_END	0	ATK_END	2	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	<b>	Spell	Damage	+	1	</b>
Module	body	ClassDef	name	WrathOfAirTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WrathofAirTotem	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	FREE	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AncestorsCall	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Put	a	random	minion	from	each	player's	hand	into	the	battlefield	.
Module	body	ClassDef	name	AncestorsCall	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AncestorsCall	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	BoolOp	op	Or	^	^	values	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	player	^	^	^	^	iter	Attribute	value	Name	id	game	^	^	^	^	attr	players	^	^	^	^	body	Assign	targets	Name	id	minions	^	^	^	^	value	ListComp	elt	Name	id	card	^	^	^	^	generators	comprehension	target	Name	id	card	^	^	^	^	iter	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	ifs	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	is_minion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	is_async	0	^	^	^	^	^	^	^	If	test	BoolOp	op	And	^	^	values	Call	func	Name	id	len	^	^	^	^	args	Name	id	minions	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	body	Assign	targets	Name	id	minion_card	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minion_card	^	^	^	^	attr	unattach	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	attr	remove	^	^	^	^	args	Name	id	minion_card	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minion_card	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
AnimaGolem	NAME_END	9	ATK_END	9	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Mech	RACE_END	Epic	RARITY_END	At	the	end	of	each	turn	,	destroy	this	minion	if	it's	your	only	one	.
Module	body	ClassDef	name	AnimaGolem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AnimaGolem	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	9	^	^	^	Num	n	9	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	Call	func	Name	id	MinionCountIs	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AntiqueHealbot	NAME_END	3	ATK_END	3	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Restore	8	Health	to	your	hero	.
Module	body	ClassDef	name	AntiqueHealbot	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AntiqueHealbot	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	8	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArcaneNullifierX21	NAME_END	2	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	<b>	Taunt	</b>	NL	Can't	be	targeted	by	spells	or	Hero	Powers	.
Module	body	ClassDef	name	ArcaneNullifierX21	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArcaneNullifierX21	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	spell_targetable	^	^	value	NameConstant	value	False	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArmorPlating	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Give	a	minion	+	1	Health	.
Module	body	ClassDef	name	ArmorPlating	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArmorPlating	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Blingtron3000	NAME_END	3	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Equip	a	random	weapon	for	each	player	.
Module	body	ClassDef	name	Blingtron3000	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Blingtron3000	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Equip	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	IsWeapon	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BolvarFordragon	NAME_END	1	ATK_END	7	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	Whenever	a	friendly	minion	dies	while	this	is	in	your	hand	,	gain	+	1	Attack	.
Module	body	ClassDef	name	BolvarFordragon	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BolvarFordragon	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionDied	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	7	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BombLobber	NAME_END	3	ATK_END	3	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Deal	4	damage	to	a	random	enemy	minion	.
Module	body	ClassDef	name	BombLobber	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BombLobber	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	NameConstant	value	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BoomBot	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	NIL	RARITY_END	<b>	Deathrattle	</b>	Deal	1	-	4	damage	to	a	random	enemy	.
Module	body	ClassDef	name	BoomBot	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BoomBot	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Call	func	Name	id	RandomAmount	^	^	^	^	args	Num	n	1	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BouncingBlade	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Deal	$	1	damage	to	a	random	minion	.	Repeat	until	a	minion	dies	.
Module	body	ClassDef	name	BouncingBlade	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BouncingBlade	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	BinOp	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	op	Add	^	^	right	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	^	ops	GtE	^	^	comparators	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	BinOp	left	Subscript	value	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	slice	Slice	lower	^	upper	^	step	^	^	^	^	^	op	Add	^	^	right	Subscript	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	minions	^	^	^	^	slice	Slice	lower	^	upper	^	step	^	^	^	^	^	^	^	^	If	test	Call	func	Name	id	len	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	body	For	target	Name	id	bounces	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	80	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	target	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Attribute	value	Name	id	target	^	^	^	^	attr	dead	^	^	^	^	body	Break	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
CallPet	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Draw	a	card	.	NL	If	it's	a	Beast	,	it	costs	(	4	)	less	.
Module	body	ClassDef	name	CallPet	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CallPet	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	FunctionDef	name	reduce_cost	^	^	args	arguments	args	arg	arg	card	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	is_minion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Compare	left	Attribute	value	Name	id	card	^	^	^	^	attr	minion_type	^	^	^	^	ops	Eq	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	4	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	bind_once	^	^	^	^	args	Str	s	card_drawn	^	^	^	Name	id	reduce_cost	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Chicken	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Chicken	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Chicken	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ClockworkGiant	NAME_END	8	ATK_END	8	DEF_END	12	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Epic	RARITY_END	Costs	(	1	)	less	for	each	card	in	your	opponent's	hand	.
Module	body	ClassDef	name	ClockworkGiant	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ClockworkGiant	^	^	^	Num	n	12	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ClockworkGnome	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Add	a	<b>	Spare	Part	</b>	card	to	your	hand	.
Module	body	ClassDef	name	ClockworkGnome	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ClockworkGnome	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	ImportFrom	module	hearthbreaker.cards.spells.neutral	^	^	names	alias	name	spare_part_list	^	^	asname	^	^	^	level	0	^	^	^	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	LIST	^	^	^	^	^	keyword	arg	source_list	^	^	value	Name	id	spare_part_list	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CobaltGuardian	NAME_END	6	ATK_END	3	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	Whenever	you	summon	a	Mech	,	gain	<b>	Divine	Shield	</b>	.
Module	body	ClassDef	name	CobaltGuardian	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CobaltGuardian	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionSummoned	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	DivineShield	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CobraShot	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	3	damage	to	a	minion	and	the	enemy	hero	.
Module	body	ClassDef	name	CobraShot	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CobraShot	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Coghammer	NAME_END	2	ATK_END	-1	DEF_END	3	COST_END	3	DUR_END	Weapon	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Give	a	random	friendly	minion	<b>	Divine	Shield	</b>	and	<b>	Taunt	</b>	.
Module	body	ClassDef	name	Coghammer	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Coghammer	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	DivineShield	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Taunt	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Cogmaster	NAME_END	1	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Has	+	2	Attack	while	you	have	a	Mech	.
Module	body	ClassDef	name	Cogmaster	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Cogmaster	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Crush	NAME_END	-1	ATK_END	-1	DEF_END	7	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Destroy	a	minion	.	If	you	have	a	damaged	minion	,	this	costs	(	4	)	less	.
Module	body	ClassDef	name	Crush	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Crush	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	4	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsDamaged	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DarkWispers	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Choose	One	-	</b>	Summon	5	Wisps	;	or	Give	a	minion	+	5	/	+	5	and	<b>	Taunt	</b>	.
Module	body	ClassDef	name	DarkWispers	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DarkWispers	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	BoolOp	op	Or	^	^	values	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	Compare	left	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	args	Name	id	game	^	^	^	Lambda	args	arguments	args	arg	arg	t	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Call	func	Attribute	value	Name	id	t	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	ops	IsNot	^	^	comparators	NameConstant	value	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	ClassDef	name	Buff5	^	^	bases	Name	id	ChoiceCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Giveaminion+5/+5andTaunt	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Compare	left	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	args	Name	id	game	^	^	^	Lambda	args	arguments	args	arg	arg	t	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Call	func	Attribute	value	Name	id	t	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	ops	IsNot	^	^	comparators	NameConstant	value	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	args	Name	id	game	^	^	^	Lambda	args	arguments	args	arg	arg	t	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Call	func	Attribute	value	Name	id	t	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	target	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	agent	^	^	^	^	attr	choose_target	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	target	^	^	^	^	attr	taunt	^	^	^	^	value	NameConstant	value	True	^	^	^	^	^	^	returns	^	^	^	^	ClassDef	name	Wisps5	^	^	bases	Name	id	ChoiceCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Summon5Wisps	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	ImportFrom	module	hearthbreaker.cards.minions.neutral	^	^	names	alias	name	Wisp	^	^	asname	^	^	^	level	0	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	wisp	^	^	^	^	value	Call	func	Name	id	Wisp	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	wisp	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	args	Name	id	game	^	^	^	Lambda	args	arguments	args	arg	arg	t	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Call	func	Attribute	value	Name	id	t	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	ops	Eq	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Assign	targets	Name	id	option	^	^	^	^	value	Call	func	Name	id	Wisps5	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	Assign	targets	Name	id	option	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	agent	^	^	^	^	attr	choose_option	^	^	^	^	args	List	elts	Call	func	Name	id	Wisps5	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff5	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	option	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Darkbomb	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	3	damage	.
Module	body	ClassDef	name	Darkbomb	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Darkbomb	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Demonheart	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Deal	$	5	damage	to	a	minion	.	If	it's	a	friendly	Demon	,	give	it	+	5	/	+	5	instead	.
Module	body	ClassDef	name	Demonheart	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Demonheart	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	card	^	^	^	^	attr	minion_type	^	^	^	^	ops	Is	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	Compare	left	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	ops	In	^	^	comparators	Name	id	targets	^	^	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DoctorBoom	NAME_END	7	ATK_END	7	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Summon	two	1	/	1	Boom	Bots	.	<i>	WARNING	Bots	may	explode	.	</i>
Module	body	ClassDef	name	DoctorBoom	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Dr.Boom	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	BoomBot	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	7	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DruidOfTheFang	NAME_END	7	ATK_END	7	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	Beast	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	DruidOfTheFang	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DruidoftheFang	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	CobraForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DruidOfTheFang	NAME_END	4	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	If	you	have	a	Beast	,	transform	this	minion	into	a	7	/	7	.
Module	body	ClassDef	name	DruidOfTheFang	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DruidoftheFang	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	CobraForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DunemaulShaman	NAME_END	5	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Windfury	,	Overload	(	1	)	</b>	NL	50%	chance	to	attack	the	wrong	enemy	.
Module	body	ClassDef	name	DunemaulShaman	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DunemaulShaman	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	windfury	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	ChangeTarget	^	^	^	^	args	Call	func	Name	id	CharacterSelector	^	^	^	^	args	Call	func	Name	id	NotCurrentTarget	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	And	^	^	^	^	args	Call	func	Name	id	OneIn	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	OpponentMinionCountIsGreaterThan	^	^	^	^	args	Num	n	0	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
EnhanceoMechano	NAME_END	3	ATK_END	2	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Give	your	other	minions	<b>	Windfury	</b>	,	<b>	Taunt	</b>	,	or	<b>	Divine	Shield	</b>	.	NL	<i>	(	at	random	)	</i>
Module	body	ClassDef	name	EnhanceoMechano	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	EnhanceoMechano	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Windfury	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Taunt	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	DivineShield	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ExplosiveSheep	NAME_END	1	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Deal	2	damage	to	all	minions	.
Module	body	ClassDef	name	ExplosiveSheep	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ExplosiveSheep	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FeignDeath	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Trigger	all	<b>	Deathrattles	</b>	on	your	minions	.
Module	body	ClassDef	name	FeignDeath	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FeignDeath	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Name	id	sorted	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	keyword	arg	key	^	^	value	Lambda	args	arguments	args	arg	arg	m	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Attribute	value	Name	id	m	^	^	^	^	attr	born	^	^	^	^	^	^	^	^	^	^	body	For	target	Name	id	deathrattle	^	^	^	^	iter	Attribute	value	Name	id	minion	^	^	^	^	attr	deathrattle	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	deathrattle	^	^	^	^	attr	do	^	^	^	^	args	Name	id	minion	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	If	test	Attribute	value	Name	id	player	^	^	^	^	attr	double_deathrattle	^	^	^	^	body	For	target	Name	id	deathrattle	^	^	^	^	iter	Attribute	value	Name	id	minion	^	^	^	^	attr	deathrattle	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	deathrattle	^	^	^	^	attr	do	^	^	^	^	args	Name	id	minion	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
FelCannon	NAME_END	3	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	At	the	end	of	your	turn	,	deal	2	damage	to	a	non	-	Mech	minion	.
Module	body	ClassDef	name	FelCannon	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FelCannon	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	Not	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	NameConstant	value	True	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FelReaver	NAME_END	8	ATK_END	8	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Epic	RARITY_END	Whenever	your	opponent	plays	a	card	,	remove	the	top	3	cards	of	your	deck	.
Module	body	ClassDef	name	FelReaver	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FelReaver	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CardPlayed	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Discard	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	keyword	arg	query	^	^	value	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	MY_DECK	^	^	^	^	^	^	^	^	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FinickyCloakfield	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Give	a	friendly	minion	<b>	Stealth	</b>	until	your	next	turn	.
Module	body	ClassDef	name	FinickyCloakfield	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FinickyCloakfield	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	Stealth	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FlameLeviathan	NAME_END	7	ATK_END	7	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	Mech	RACE_END	Legendary	RARITY_END	When	you	draw	this	,	deal	2	damage	to	all	characters	.
Module	body	ClassDef	name	FlameLeviathan	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FlameLeviathan	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Drawn	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	NameConstant	value	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	7	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Flamecannon	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	4	damage	to	a	random	enemy	minion	.
Module	body	ClassDef	name	Flamecannon	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Flamecannon	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_battlecry_target	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Lambda	args	arguments	args	arg	arg	x	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	NameConstant	value	True	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	target	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	GtE	^	^	comparators	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FoeReaper4000	NAME_END	6	ATK_END	9	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Legendary	RARITY_END	Also	damages	the	minions	next	to	whomever	he	attacks	.
Module	body	ClassDef	name	FoeReaper4000	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FoeReaper4000	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	9	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Attack	^	^	^	^	args	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	attack	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	TargetAdjacent	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ForceTankMAX	NAME_END	7	ATK_END	7	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Divine	Shield	</b>
Module	body	ClassDef	name	ForceTankMAX	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ForceTankMAX	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Gahzrilla	NAME_END	6	ATK_END	9	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Legendary	RARITY_END	Whenever	this	minion	takes	damage	,	double	its	Attack	.
Module	body	ClassDef	name	Gahzrilla	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Gahzrilla	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	9	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Damaged	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	DoubleAttack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GallywixsCoin	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Gain	1	Mana	Crystal	this	turn	only	.	NL	<i>	(	Won't	trigger	Gallywix	.	)	</i>
Module	body	ClassDef	name	GallywixsCoin	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GallywixsCoin	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	mana	^	^	^	^	ops	Lt	^	^	comparators	Num	n	10	^	^	^	^	^	^	body	AugAssign	target	Attribute	value	Name	id	player	^	^	^	^	attr	mana	^	^	^	^	op	Add	^	^	value	Num	n	1	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Gazlowe	NAME_END	3	ATK_END	6	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	Whenever	you	cast	a	1	-	mana	spell	,	add	a	random	Mech	to	your	hand	.
Module	body	ClassDef	name	Gazlowe	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Gazlowe	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	Call	func	Name	id	ManaCost	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GilblinStalker	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Stealth	</b>
Module	body	ClassDef	name	GilblinStalker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GilblinStalker	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	stealth	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Glaivezooka	NAME_END	2	ATK_END	-1	DEF_END	2	COST_END	2	DUR_END	Weapon	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Give	a	random	friendly	minion	+	1	Attack	.
Module	body	ClassDef	name	Glaivezooka	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Glaivezooka	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	NameConstant	value	^	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GnomereganInfantry	NAME_END	1	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Charge	</b>	NL	<b>	Taunt	</b>
Module	body	ClassDef	name	GnomereganInfantry	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GnomereganInfantry	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GoblinBlastmage	NAME_END	5	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	If	you	have	a	Mech	,	deal	4	damage	randomly	split	among	all	enemies	.
Module	body	ClassDef	name	GoblinBlastmage	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GoblinBlastmage	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	NameConstant	value	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GoblinSapper	NAME_END	2	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Has	+	4	Attack	while	your	opponent	has	6	or	more	cards	in	hand	.
Module	body	ClassDef	name	GoblinSapper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GoblinSapper	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	5	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GroveTender	NAME_END	2	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Choose	One	-	</b>	Give	each	player	a	Mana	Crystal	;	or	Each	player	draws	a	card	.
Module	body	ClassDef	name	GroveTender	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GroveTender	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	GiftOfMana	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GiveManaCrystal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	GiftOfCards	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HemetNesingwary	NAME_END	6	ATK_END	3	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Destroy	a	Beast	.
Module	body	ClassDef	name	HemetNesingwary	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HemetNesingwary	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Hobgoblin	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Whenever	you	play	a	1	-	Attack	minion	,	give	it	+	2	/	+	2	.
Module	body	ClassDef	name	Hobgoblin	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Hobgoblin	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionPlaced	^	^	^	^	args	Call	func	Name	id	BaseAttackEqualTo	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TargetSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Illuminator	NAME_END	2	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	If	you	control	a	<b>	Secret	</b>	at	the	end	of	your	turn	,	restore	4	health	to	your	hero	.
Module	body	ClassDef	name	Illuminator	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Illuminator	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	Call	func	Name	id	HasSecret	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Imp	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Imp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Imp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Implosion	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	2	-	$	4	damage	to	a	minion	.	Summon	a	1	/	1	Imp	for	each	damage	dealt	.
Module	body	ClassDef	name	Implosion	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Implosion	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	amount	^	^	^	^	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_amount	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	had_shield	^	^	^	^	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	divine_shield	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Name	id	amount	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	UnaryOp	op	Not	^	^	operand	Name	id	had_shield	^	^	^	^	^	^	body	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Name	id	amount	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	imp	^	^	^	^	value	Call	func	Name	id	Imp	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	imp	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Jeeves	NAME_END	1	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	At	the	end	of	each	player's	turn	,	that	player	draws	until	they	have	3	cards	.
Module	body	ClassDef	name	Jeeves	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Jeeves	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	Call	func	Name	id	Difference	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	CurrentPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	3	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	CurrentPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Junkbot	NAME_END	1	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Epic	RARITY_END	Whenever	a	friendly	Mech	dies	,	gain	+	2	/	+	2	.
Module	body	ClassDef	name	Junkbot	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Junkbot	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionDied	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
KezanMystic	NAME_END	4	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Take	control	of	a	random	enemy	<b>	Secret	</b>	.
Module	body	ClassDef	name	KezanMystic	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	KezanMystic	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	ApplySecret	^	^	^	^	args	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	ENEMY_SECRETS	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
KingOfBeasts	NAME_END	2	ATK_END	6	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Rare	RARITY_END	<b>	Taunt	</b>	.	<b>	Battlecry	</b>	Gain	+	1	Attack	for	each	other	Beast	you	have	.
Module	body	ClassDef	name	KingOfBeasts	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	KingofBeasts	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LightOfTheNaaru	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Restore	#	3	Health	.	If	the	target	is	still	damaged	,	summon	a	Lightwarden	.
Module	body	ClassDef	name	LightOfTheNaaru	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LightoftheNaaru	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	lightwarden	^	^	^	^	value	Call	func	Name	id	Lightwarden	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	ops	Is	^	^	comparators	NameConstant	value	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	lightwarden	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	If	test	Compare	left	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	health	^	^	^	^	ops	NotEq	^	^	comparators	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	calculate_max_health	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	lightwarden	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Lightbomb	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Deal	damage	to	each	minion	equal	to	its	Attack	.
Module	body	ClassDef	name	Lightbomb	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Lightbomb	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
LilExorcist	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Taunt	</b>	NL	<b>	Battlecry	</b>	Gain	+	1	/	+	1	for	each	enemy	<b>	Deathrattle	</b>	minion	.
Module	body	ClassDef	name	LilExorcist	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LilExorcist	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	MinionHasDeathrattle	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	MinionHasDeathrattle	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LostTallstrider	NAME_END	5	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	LostTallstrider	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LostTallstrider	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Malorne	NAME_END	9	ATK_END	7	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	Beast	RACE_END	Legendary	RARITY_END	<b>	Deathrattle	</b>	Shuffle	this	minion	into	your	deck	.
Module	body	ClassDef	name	Malorne	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Malorne	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	9	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	List	elts	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	MINION	^	^	^	^	^	keyword	arg	minion	^	^	value	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	keyword	arg	add_to_deck	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Remove	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MechBearCat	NAME_END	7	ATK_END	6	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	Whenever	this	minion	takes	damage	,	add	a	<b>	Spare	Part	</b>	card	to	your	hand	.
Module	body	ClassDef	name	MechBearCat	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MechBearCat	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Damaged	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	LIST	^	^	^	^	^	keyword	arg	source_list	^	^	value	Name	id	spare_part_list	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MechanicalYeti	NAME_END	4	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Give	each	player	a	<b>	Spare	Part	.	</b>
Module	body	ClassDef	name	MechanicalYeti	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MechanicalYeti	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	ImportFrom	module	hearthbreaker.cards.spells.neutral	^	^	names	alias	name	spare_part_list	^	^	asname	^	^	^	level	0	^	^	^	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	LIST	^	^	^	^	^	keyword	arg	source_list	^	^	value	Name	id	spare_part_list	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Mechwarper	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	Your	Mechs	cost	(	1	)	less	.
Module	body	ClassDef	name	Mechwarper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Mechwarper	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MekgineerThermaplugg	NAME_END	9	ATK_END	7	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Legendary	RARITY_END	Whenever	an	enemy	minion	dies	,	summon	a	Leper	Gnome	.
Module	body	ClassDef	name	MekgineerThermaplugg	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MekgineerThermaplugg	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	9	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionDied	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	LeperGnome	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MetaltoothLeaper	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Give	your	other	Mechs	+	2	Attack	.
Module	body	ClassDef	name	MetaltoothLeaper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MetaltoothLeaper	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MicroMachine	NAME_END	1	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	At	the	start	of	each	turn	,	gain	+	1	Attack	.
Module	body	ClassDef	name	MicroMachine	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MicroMachine	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MimironsHead	NAME_END	4	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Legendary	RARITY_END	At	the	start	of	your	turn	,	if	you	have	at	least	3	Mechs	,	destroy	them	all	and	form	V	-	07	-	TR	-	0N	.
Module	body	ClassDef	name	MimironsHead	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MimironsHead	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	List	elts	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	NameConstant	value	True	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	NameConstant	value	True	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	2	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	V07TR0N	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MogorTheOgre	NAME_END	7	ATK_END	6	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	All	minions	have	a	50%	chance	to	attack	the	wrong	enemy	.
Module	body	ClassDef	name	MogorTheOgre	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MogortheOgre	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterAttack	^	^	^	^	args	NameConstant	value	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	ChangeTarget	^	^	^	^	args	Call	func	Name	id	CharacterSelector	^	^	^	^	args	Call	func	Name	id	NotCurrentTarget	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TargetSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	And	^	^	^	^	args	Call	func	Name	id	OneIn	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	OpponentMinionCountIsGreaterThan	^	^	^	^	args	Num	n	0	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MusterForBattle	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Summon	three	1	/	1	Silver	Hand	Recruits	.	Equip	a	1	/	4	Weapon	.
Module	body	ClassDef	name	MusterForBattle	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MusterforBattle	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	dude	^	^	^	^	value	Call	func	Name	id	SilverHandRecruit	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	dude	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	Assign	targets	Name	id	justice	^	^	^	^	value	Call	func	Name	id	LightsJustice	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	hammer	^	^	^	^	value	Call	func	Attribute	value	Name	id	justice	^	^	^	^	attr	create_weapon	^	^	^	^	args	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	hammer	^	^	^	^	attr	card	^	^	^	^	value	Name	id	justice	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	hammer	^	^	^	^	attr	equip	^	^	^	^	args	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Neptulon	NAME_END	7	ATK_END	7	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Add	4	random	Murlocs	to	your	hand	.	<b>	Overload	</b>	(	3	)
Module	body	ClassDef	name	Neptulon	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	ImportFrom	module	hearthbreaker.cards.minions.neutral	^	^	names	alias	name	BluegillWarrior	^	^	asname	^	^	alias	name	ColdlightOracle	^	^	asname	^	^	alias	name	ColdlightSeer	^	^	asname	^	^	alias	name	GrimscaleOracle	^	^	asname	^	^	alias	name	MurlocRaider	^	^	asname	^	^	alias	name	MurlocTidecaller	^	^	asname	^	^	alias	name	MurlocTidehunter	^	^	asname	^	^	alias	name	MurlocWarleader	^	^	asname	^	^	alias	name	OldMurkEye	^	^	asname	^	^	alias	name	Puddlestomper	^	^	asname	^	^	^	level	0	^	^	^	Assign	targets	Name	id	murloc_list	^	^	^	^	value	List	elts	Call	func	Name	id	BluegillWarrior	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ColdlightOracle	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ColdlightSeer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GrimscaleOracle	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MurlocRaider	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MurlocTidecaller	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MurlocTidehunter	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MurlocWarleader	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	OldMurkEye	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Puddlestomper	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SiltfinSpiritwalker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Neptulon	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Num	n	3	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	LIST	^	^	^	^	^	keyword	arg	source_list	^	^	value	Name	id	murloc_list	^	^	^	^	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	7	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
OgreBrute	NAME_END	4	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	50%	chance	to	attack	the	wrong	enemy	.
Module	body	ClassDef	name	OgreBrute	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	OgreBrute	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	ChangeTarget	^	^	^	^	args	Call	func	Name	id	CharacterSelector	^	^	^	^	args	Call	func	Name	id	NotCurrentTarget	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	And	^	^	^	^	args	Call	func	Name	id	OneIn	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	OpponentMinionCountIsGreaterThan	^	^	^	^	args	Num	n	0	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
OgreNinja	NAME_END	6	ATK_END	6	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Stealth	</b>	NL	50%	chance	to	attack	the	wrong	enemy	.
Module	body	ClassDef	name	OgreNinja	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	OgreNinja	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	stealth	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	ChangeTarget	^	^	^	^	args	Call	func	Name	id	CharacterSelector	^	^	^	^	args	Call	func	Name	id	NotCurrentTarget	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	And	^	^	^	^	args	Call	func	Name	id	OneIn	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	OpponentMinionCountIsGreaterThan	^	^	^	^	args	Num	n	0	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
OgreWarmaul	NAME_END	4	ATK_END	-1	DEF_END	3	COST_END	2	DUR_END	Weapon	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	50%	chance	to	attack	the	wrong	enemy	.
Module	body	ClassDef	name	OgreWarmaul	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	OgreWarmaul	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	4	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterAttack	^	^	^	^	args	Call	func	Name	id	IsHero	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	ChangeTarget	^	^	^	^	args	Call	func	Name	id	CharacterSelector	^	^	^	^	args	Call	func	Name	id	NotCurrentTarget	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	And	^	^	^	^	args	Call	func	Name	id	OneIn	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	OpponentMinionCountIsGreaterThan	^	^	^	^	args	Num	n	0	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
OneeyedCheat	NAME_END	4	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	Pirate	RACE_END	Rare	RARITY_END	Whenever	you	summon	a	Pirate	,	gain	<b>	Stealth	</b>	.
Module	body	ClassDef	name	OneeyedCheat	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	OneeyedCheat	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionSummoned	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Stealth	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
PilotedShredder	NAME_END	4	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Summon	a	random	2	-	Cost	minion	.
Module	body	ClassDef	name	PilotedShredder	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	PilotedShredder	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	ManaCost	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Puddlestomper	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Puddlestomper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Puddlestomper	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Quartermaster	NAME_END	2	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Give	your	Silver	Hand	Recruits	+	2	/	+	2	.
Module	body	ClassDef	name	Quartermaster	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Quartermaster	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	HasCardName	^	^	^	^	args	Str	s	SilverHandRecruit	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Recombobulator	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Transform	a	friendly	minion	into	a	random	minion	with	the	same	Cost	.
Module	body	ClassDef	name	Recombobulator	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Recombobulator	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	ManaCost	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	mana	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Recycle	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Shuffle	an	enemy	minion	into	your	opponent's	deck	.
Module	body	ClassDef	name	Recycle	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Recycle	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	deck	^	^	^	^	attr	put_back	^	^	^	^	args	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	remove_from_board	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ReversingSwitch	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Swap	a	minion's	Attack	and	Health	.
Module	body	ClassDef	name	ReversingSwitch	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ReversingSwitch	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	temp_attack	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	temp_health	^	^	^	^	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	health	^	^	^	^	^	If	test	Compare	left	Name	id	temp_attack	^	^	^	^	ops	Eq	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	NameConstant	value	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	set_attack_to	^	^	^	^	args	Name	id	temp_health	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	set_health_to	^	^	^	^	args	Name	id	temp_attack	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
RustyHorn	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Give	a	minion	<b>	Taunt	</b>	.
Module	body	ClassDef	name	RustyHorn	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RustyHorn	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Taunt	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Sabotage	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Destroy	a	random	enemy	minion	.	<b>	Combo	</b>	And	your	opponent's	weapon	.
Module	body	ClassDef	name	Sabotage	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Sabotage	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_battlecry_target	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Lambda	args	arguments	args	arg	arg	x	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	NameConstant	value	True	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	target	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	die	^	^	^	^	args	NameConstant	value	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	check_delayed	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	If	test	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	cards_played	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	Compare	left	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	weapon	^	^	^	^	ops	IsNot	^	^	comparators	NameConstant	value	^	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	weapon	^	^	^	^	attr	destroy	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	GtE	^	^	comparators	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SaltyDog	NAME_END	7	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Pirate	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	SaltyDog	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SaltyDog	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SealOfLight	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Restore	#	4	Health	to	your	hero	and	gain	+	2	Attack	this	turn	.
Module	body	ClassDef	name	SealOfLight	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SealofLight	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	change_temp_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Shadowbomber	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Deal	3	damage	to	each	hero	.
Module	body	ClassDef	name	Shadowbomber	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Shadowbomber	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Shadowboxer	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	Whenever	a	character	is	healed	,	deal	1	damage	to	a	random	enemy	.
Module	body	ClassDef	name	Shadowboxer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Shadowboxer	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterHealed	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	condition	^	^	value	NameConstant	value	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ShieldedMinibot	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Divine	Shield	</b>
Module	body	ClassDef	name	ShieldedMinibot	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ShieldedMinibot	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Shieldmaiden	NAME_END	5	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Gain	5	Armor	.
Module	body	ClassDef	name	Shieldmaiden	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Shieldmaiden	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	IncreaseArmor	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ShipsCannon	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	you	summon	a	Pirate	,	deal	2	damage	to	a	random	enemy	.
Module	body	ClassDef	name	ShipsCannon	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ShipsCannon	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionSummoned	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	NameConstant	value	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Shrinkmeister	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Give	a	minion	-2	Attack	this	turn	.
Module	body	ClassDef	name	Shrinkmeister	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Shrinkmeister	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	2	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	CurrentPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SiegeEngine	NAME_END	5	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	Whenever	you	gain	Armor	,	give	this	minion	+	1	Attack	.
Module	body	ClassDef	name	SiegeEngine	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SiegeEngine	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	ArmorIncreased	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Snowchugger	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Freeze	</b>	any	character	damaged	by	this	minion	.
Module	body	ClassDef	name	Snowchugger	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Snowchugger	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	DidDamage	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Frozen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TargetSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SootSpewer	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	<b>	Spell	Damage	+	1	</b>
Module	body	ClassDef	name	SootSpewer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SootSpewer	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SpiderTank	NAME_END	3	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	SpiderTank	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SpiderTank	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SteamwheedleSniper	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Your	Hero	Power	can	target	minions	.
Module	body	ClassDef	name	SteamwheedleSniper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SteamwheedleSniper	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	PowerTargetsMinions	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StonesplinterTrogg	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	your	opponent	casts	a	spell	,	gain	+	1	Attack	.
Module	body	ClassDef	name	StonesplinterTrogg	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StonesplinterTrogg	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TargetDummy	NAME_END	0	ATK_END	2	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	TargetDummy	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TargetDummy	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TimeRewinder	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Return	a	friendly	minion	to	your	hand	.
Module	body	ClassDef	name	TimeRewinder	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TimeRewinder	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TinkersSharpswordOil	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	your	weapon	+	3	Attack	.	<b>	Combo	</b>	Give	a	random	friendly	minion	+	3	Attack	.
Module	body	ClassDef	name	TinkersSharpswordOil	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TinkersSharpswordOil	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	AugAssign	target	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	weapon	^	^	^	^	attr	base_attack	^	^	^	^	op	Add	^	^	value	Num	n	3	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	change_temp_attack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	cards_played	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_minion_battlecry_target	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Lambda	args	arguments	args	arg	arg	x	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Name	id	x	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Name	id	targets	^	^	^	^	ops	IsNot	^	^	comparators	NameConstant	value	^	^	^	^	^	body	Assign	targets	Name	id	target	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	weapon	^	^	^	^	ops	IsNot	^	^	comparators	NameConstant	value	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TradePrinceGallywix	NAME_END	5	ATK_END	8	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	Whenever	your	opponent	casts	a	spell	,	gain	a	copy	of	it	and	give	them	a	Coin	.
Module	body	ClassDef	name	TradePrinceGallywix	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TradePrinceGallywix	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	8	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	Call	func	Name	id	Not	^	^	^	^	args	Call	func	Name	id	HasCardName	^	^	^	^	args	Str	s	GallywixsCoin	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	LAST_CARD	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	FriendlyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	Call	func	Name	id	Not	^	^	^	^	args	Call	func	Name	id	HasCardName	^	^	^	^	args	Str	s	GallywixsCoin	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	GallywixsCoin	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TreeOfLife	NAME_END	-1	ATK_END	-1	DEF_END	9	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Restore	all	characters	to	full	Health	.
Module	body	ClassDef	name	TreeOfLife	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TreeofLife	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	target	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	calculate_max_health	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
TroggzorTheEarthinator	NAME_END	6	ATK_END	6	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	Whenever	your	opponent	casts	a	spell	,	summon	a	Burly	Rockjaw	Trogg	.
Module	body	ClassDef	name	TroggzorTheEarthinator	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TroggzortheEarthinator	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	BurlyRockjawTrogg	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
UnstablePortal	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Add	a	random	minion	to	your	hand	.	It	costs	(	3	)	less	.
Module	body	ClassDef	name	UnstablePortal	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	UnstablePortal	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	query	^	^	^	^	value	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	Assign	targets	Name	id	new_minon	^	^	^	^	value	Call	func	Attribute	value	Name	id	query	^	^	^	^	attr	get_card	^	^	^	^	args	Name	id	player	^	^	^	Name	id	player	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	new_minon	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	3	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	attr	append	^	^	^	^	args	Name	id	new_minon	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
UpgradedRepairBot	NAME_END	5	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Give	a	friendly	Mech	+	4	Health	.
Module	body	ClassDef	name	UpgradedRepairBot	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	UpgradedRepairBot	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
V07TR0N	NAME_END	4	ATK_END	8	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Legendary	RARITY_END	<b>	Charge	</b>	NL	<b>	Mega	-	Windfury	</b>	<i>	(	Can	attack	four	times	a	turn	.	)	</i>
Module	body	ClassDef	name	V07TR0N	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	V07TR0N	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	8	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	MegaWindfury	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
VelensChosen	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	a	minion	+	2	/	+	4	and	<b>	Spell	Damage	+	1	</b>	.
Module	body	ClassDef	name	VelensChosen	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	VelensChosen	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	SpellDamage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
VitalityTotem	NAME_END	0	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	Totem	RACE_END	Rare	RARITY_END	At	the	end	of	your	turn	,	restore	4	Health	to	your	hero	.
Module	body	ClassDef	name	VitalityTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	VitalityTotem	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WeeSpellstopper	NAME_END	2	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Adjacent	minions	can't	be	targeted	by	spells	or	Hero	Powers	.
Module	body	ClassDef	name	WeeSpellstopper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WeeSpellstopper	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	NoSpellTarget	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	Adjacent	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WhirlingBlades	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Give	a	minion	+	1	Attack	.
Module	body	ClassDef	name	WhirlingBlades	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WhirlingBlades	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WhirlingZapomatic	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Windfury	</b>
Module	body	ClassDef	name	WhirlingZapomatic	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WhirlingZapomatic	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	windfury	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AnubarAmbusher	NAME_END	5	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Return	a	random	friendly	minion	to	your	hand	.
Module	body	ClassDef	name	AnubarAmbusher	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AnubarAmbusher	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Avenge	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Secret	</b>	When	one	of	your	minions	dies	,	give	a	random	friendly	minion	+	3	/	+	2	.
Module	body	ClassDef	name	Avenge	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Avenge	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	dead_minion	^	^	annotation	^	^	arg	arg	attacker	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	ListComp	elt	Name	id	minion	^	^	^	^	generators	comprehension	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	ifs	UnaryOp	op	Not	^	^	operand	Attribute	value	Name	id	minion	^	^	^	^	attr	dead	^	^	^	^	^	^	is_async	0	^	^	^	^	^	^	keywords	empty	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Assign	targets	Name	id	target	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	minion_died	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	minion_died	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BaronRivendare	NAME_END	1	ATK_END	7	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	Your	minions	trigger	their	<b>	Deathrattles	</b>	twice	.
Module	body	ClassDef	name	BaronRivendare	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BaronRivendare	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	DoubleDeathrattle	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DancingSwords	NAME_END	4	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Your	opponent	draws	a	card	.
Module	body	ClassDef	name	DancingSwords	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DancingSwords	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DarkCultist	NAME_END	3	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Give	a	random	friendly	minion	+	3	Health	.
Module	body	ClassDef	name	DarkCultist	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DarkCultist	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Duplicate	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Secret	</b>	When	a	friendly	minion	dies	,	put	2	copies	of	it	into	your	hand	.
Module	body	ClassDef	name	Duplicate	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Duplicate	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	NameConstant	value	^	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	minion_died	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	minion_died	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	NameConstant	value	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	minion	^	^	annotation	^	^	arg	arg	by	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	For	target	Name	id	c	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	10	^	^	^	^	^	^	body	Assign	targets	Name	id	new_card	^	^	^	^	value	Call	func	Call	func	Name	id	type	^	^	^	^	args	Attribute	value	Name	id	minion	^	^	^	^	attr	card	^	^	^	^	keywords	empty	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	hand	^	^	^	^	attr	append	^	^	^	^	args	Name	id	new_card	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	new_card	^	^	^	^	attr	attach	^	^	^	^	args	Name	id	new_card	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
EchoingOoze	NAME_END	1	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Summon	an	exact	copy	of	this	minion	at	the	end	of	the	turn	.
Module	body	ClassDef	name	EchoingOoze	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	EchoingOoze	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	GiveEffect	^	^	^	^	args	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Duplicate	^	^	^	^	args	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Feugen	NAME_END	4	ATK_END	7	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	NIL
Module	body	ClassDef	name	Feugen	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Feugen	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Thaddius	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	InGraveyard	^	^	^	^	args	Call	func	Name	id	Stalagg	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Feugen	NAME_END	4	ATK_END	7	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Deathrattle	</b>	If	Stalagg	also	died	this	game	,	summon	Thaddius	.
Module	body	ClassDef	name	Feugen	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Feugen	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Thaddius	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	InGraveyard	^	^	^	^	args	Call	func	Name	id	Stalagg	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HauntedCreeper	NAME_END	1	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Summon	two	1	/	1	Spectral	Spiders	.
Module	body	ClassDef	name	HauntedCreeper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HauntedCreeper	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	SpectralSpider	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
KelThuzad	NAME_END	6	ATK_END	8	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	At	the	end	of	each	turn	,	summon	all	friendly	minions	that	died	this	turn	.
Module	body	ClassDef	name	KelThuzad	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	KelThuzad	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	8	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	ResurrectFriendly	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Loatheb	NAME_END	5	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Enemy	spells	cost	(	5	)	more	next	turn	.
Module	body	ClassDef	name	Loatheb	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Loatheb	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	GiveAura	^	^	^	^	args	Call	func	Name	id	AuraUntil	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsSpell	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MadScientist	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Put	a	<b>	Secret	</b>	from	your	deck	into	the	battlefield	.
Module	body	ClassDef	name	MadScientist	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MadScientist	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	ApplySecret	^	^	^	^	args	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	MY_DECK	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Nerubian	NAME_END	4	ATK_END	4	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Nerubian	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Nerubian	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Nerubian	NAME_END	3	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Nerubian	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Nerubian	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Nerubian	NAME_END	4	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	NIL
Module	body	ClassDef	name	Nerubian	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Nerubian	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
NerubianEgg	NAME_END	0	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Deathrattle	</b>	Summon	a	4	/	4	Nerubian	.
Module	body	ClassDef	name	NerubianEgg	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	NerubianEgg	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Nerubian	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
PoisonSeeds	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Destroy	all	minions	and	summon	2	/	2	Treants	to	replace	them	.
Module	body	ClassDef	name	PoisonSeeds	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	PoisonSeeds	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	ImportFrom	module	hearthbreaker.cards.minions.druid	^	^	names	alias	name	PoisonSeedsTreant	^	^	asname	^	^	^	level	0	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	args	Name	id	game	^	^	^	Lambda	args	arguments	args	arg	arg	m	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	NameConstant	value	True	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	target	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	die	^	^	^	^	args	NameConstant	value	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	check_delayed	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	target	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	PoisonSeedsTreant	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	summon	^	^	^	^	args	Attribute	value	Name	id	target	^	^	^	^	attr	player	^	^	^	Attribute	value	Name	id	target	^	^	^	^	attr	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	target	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Reincarnate	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Destroy	a	minion	,	then	return	it	to	life	with	full	Health	.
Module	body	ClassDef	name	Reincarnate	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Reincarnate	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	check_delayed	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	card	^	^	^	^	attr	summon	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ShadeOfNaxxramas	NAME_END	2	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Stealth	.	</b>	At	the	start	of	your	turn	,	gain	+	1	/	+	1	.
Module	body	ClassDef	name	ShadeOfNaxxramas	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ShadeofNaxxramas	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	stealth	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Slime	NAME_END	1	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	Slime	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Slime	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SpectralSpider	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	SpectralSpider	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SpectralSpider	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Stalagg	NAME_END	7	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	NIL
Module	body	ClassDef	name	Stalagg	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Stalagg	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Thaddius	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	InGraveyard	^	^	^	^	args	Call	func	Name	id	Feugen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Stalagg	NAME_END	7	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Deathrattle	</b>	If	Feugen	also	died	this	game	,	summon	Thaddius	.
Module	body	ClassDef	name	Stalagg	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Stalagg	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Thaddius	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	InGraveyard	^	^	^	^	args	Call	func	Name	id	Feugen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StoneskinGargoyle	NAME_END	1	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	At	the	start	of	your	turn	,	restore	this	minion	to	full	Health	.
Module	body	ClassDef	name	StoneskinGargoyle	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StoneskinGargoyle	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	10000	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Thaddius	NAME_END	11	ATK_END	11	DEF_END	10	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	NIL
Module	body	ClassDef	name	Thaddius	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Thaddius	^	^	^	Num	n	10	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	11	^	^	^	Num	n	11	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Treant	NAME_END	2	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Treant	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Treant	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	_	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Undertaker	NAME_END	1	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	you	summon	a	minion	with	<b>	Deathrattle	</b>	,	gain	+	1	Attack	.
Module	body	ClassDef	name	Undertaker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Undertaker	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionSummoned	^	^	^	^	args	Call	func	Name	id	MinionHasDeathrattle	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
UnstableGhoul	NAME_END	1	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Taunt	</b>	.	<b>	Deathrattle	</b>	Deal	1	damage	to	all	minions	.
Module	body	ClassDef	name	UnstableGhoul	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	UnstableGhoul	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Webspinner	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Add	a	random	Beast	card	to	your	hand	.
Module	body	ClassDef	name	Webspinner	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Webspinner	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ZombieChow	NAME_END	2	ATK_END	3	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Restore	5	Health	to	the	enemy	hero	.
Module	body	ClassDef	name	ZombieChow	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ZombieChow	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Abomination	NAME_END	4	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Taunt	</b>	.	<b>	Deathrattle	</b>	Deal	2	damage	to	ALL	characters	.
Module	body	ClassDef	name	Abomination	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Abomination	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AbusiveSergeant	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Give	a	minion	+	2	Attack	this	turn	.
Module	body	ClassDef	name	AbusiveSergeant	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AbusiveSergeant	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	CurrentPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AcolyteOfPain	NAME_END	1	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	this	minion	takes	damage	,	draw	a	card	.
Module	body	ClassDef	name	AcolyteOfPain	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AcolyteofPain	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Damaged	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AlAkirTheWindlord	NAME_END	3	ATK_END	5	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Windfury	,	Charge	,	Divine	Shield	,	Taunt	</b>
Module	body	ClassDef	name	AlAkirTheWindlord	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AlAkirtheWindlord	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	windfury	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AlarmoBot	NAME_END	0	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	At	the	start	of	your	turn	,	swap	this	minion	with	a	random	one	in	your	hand	.
Module	body	ClassDef	name	AlarmoBot	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AlarmoBot	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	SwapWithHand	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AldorPeacekeeper	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Change	an	enemy	minion's	Attack	to	1	.
Module	body	ClassDef	name	AldorPeacekeeper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AldorPeacekeeper	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	SetAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	NameConstant	value	^	^	^	^	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AncestralSpirit	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Give	a	minion	"	<b>	Deathrattle	</b>	Resummon	this	minion	.	"
Module	body	ClassDef	name	AncestralSpirit	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AncestralSpirit	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	deathrattle	^	^	^	^	attr	append	^	^	^	^	args	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	card	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AncientBrewmaster	NAME_END	5	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Return	a	friendly	minion	from	the	battlefield	to	your	hand	.
Module	body	ClassDef	name	AncientBrewmaster	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AncientBrewmaster	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AncientMage	NAME_END	2	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Give	adjacent	minions	<b>	Spell	Damage	+	1	</b>	.
Module	body	ClassDef	name	AncientMage	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AncientMage	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	SpellDamage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	Adjacent	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AncientWatcher	NAME_END	4	ATK_END	5	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Can't	attack	.
Module	body	ClassDef	name	AncientWatcher	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AncientWatcher	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	CantAttack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AncientOfLore	NAME_END	5	ATK_END	5	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Choose	One	-	</b>	Draw	2	cards	;	or	Restore	5	Health	.
Module	body	ClassDef	name	AncientOfLore	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AncientofLore	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	AncientSecrets	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	AncientTeachings	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Draw	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AncientOfWar	NAME_END	5	ATK_END	5	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Choose	One	</b>	-	NL	+	5	Attack	;	or	+	5	Health	and	<b>	Taunt	</b>	.
Module	body	ClassDef	name	AncientOfWar	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AncientofWar	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	Health	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Taunt	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	Attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AngryChicken	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Rare	RARITY_END	<b>	Enrage	</b>	+	5	Attack	.
Module	body	ClassDef	name	AngryChicken	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AngryChicken	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	enrage	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArathiWeaponsmith	NAME_END	3	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Equip	a	2	/	2	weapon	.
Module	body	ClassDef	name	ArathiWeaponsmith	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArathiWeaponsmith	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Equip	^	^	^	^	args	Call	func	Name	id	BattleAxe	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArgentCommander	NAME_END	4	ATK_END	2	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Charge	</b>	NL	<b>	Divine	Shield	</b>
Module	body	ClassDef	name	ArgentCommander	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArgentCommander	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArgentProtector	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Give	a	friendly	minion	<b>	Divine	Shield	</b>	.
Module	body	ClassDef	name	ArgentProtector	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArgentProtector	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	DivineShield	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ArgentSquire	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Divine	Shield	</b>
Module	body	ClassDef	name	ArgentSquire	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ArgentSquire	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Armorsmith	NAME_END	1	ATK_END	4	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	a	friendly	minion	takes	damage	,	gain	1	Armor	.
Module	body	ClassDef	name	Armorsmith	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Armorsmith	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterDamaged	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	IncreaseArmor	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Ashbringer	NAME_END	5	ATK_END	-1	DEF_END	5	COST_END	3	DUR_END	Weapon	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	NIL
Module	body	ClassDef	name	Ashbringer	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Ashbringer	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Assign	targets	Name	id	weapon	^	^	^	^	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	5	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	Return	value	Name	id	weapon	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AuchenaiSoulpriest	NAME_END	3	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Your	cards	and	powers	that	restore	Health	now	deal	damage	instead	.
Module	body	ClassDef	name	AuchenaiSoulpriest	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AuchenaiSoulpriest	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	HealAsDamage	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
AvengingWrath	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Deal	$	8	damage	randomly	split	among	all	enemies	.
Module	body	ClassDef	name	AvengingWrath	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AvengingWrath	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	target	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	damage	^	^	^	^	args	Num	n	1	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
AzureDrake	NAME_END	4	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Rare	RARITY_END	<b>	Spell	Damage	+	1	</b>	.	<b>	Battlecry	</b>	Draw	a	card	.
Module	body	ClassDef	name	AzureDrake	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AzureDrake	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BaneOfDoom	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Deal	$	2	damage	to	a	character	.	If	that	kills	it	,	summon	a	random	Demon	.
Module	body	ClassDef	name	BaneOfDoom	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BaneofDoom	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	health	^	^	^	^	ops	LtE	^	^	comparators	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	BoolOp	op	And	^	^	values	Call	func	Name	id	isinstance	^	^	^	^	args	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	Name	id	Minion	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	Not	^	^	operand	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	divine_shield	^	^	^	^	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	demons	^	^	^	^	value	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Attribute	value	Name	id	demons	^	^	^	^	attr	get_card	^	^	^	^	args	Name	id	player	^	^	^	Name	id	player	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BaronGeddon	NAME_END	7	ATK_END	5	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	At	the	end	of	your	turn	,	deal	2	damage	to	ALL	other	characters	.
Module	body	ClassDef	name	BaronGeddon	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BaronGeddon	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BattleAxe	NAME_END	2	ATK_END	-1	DEF_END	1	COST_END	2	DUR_END	Weapon	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	BattleAxe	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BattleAxe	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BattleRage	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Draw	a	card	for	each	damaged	friendly	character	.
Module	body	ClassDef	name	BattleRage	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BattleRage	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	FunctionDef	name	damaged_character	^	^	args	arguments	args	arg	arg	character	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Compare	left	Attribute	value	Name	id	character	^	^	^	^	attr	health	^	^	^	^	ops	Lt	^	^	comparators	Call	func	Attribute	value	Name	id	character	^	^	^	^	attr	calculate_max_health	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	characters	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	characters	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	characters	^	^	^	^	value	ListComp	elt	Name	id	character	^	^	^	^	generators	comprehension	target	Name	id	character	^	^	^	^	iter	Name	id	characters	^	^	^	^	ifs	Call	func	Name	id	damaged_character	^	^	^	^	args	Name	id	character	^	^	^	^	keywords	empty	^	^	^	^	is_async	0	^	^	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Name	id	characters	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
BestialWrath	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Give	a	friendly	Beast	+	2	Attack	and	<b>	Immune	</b>	this	turn	.
Module	body	ClassDef	name	BestialWrath	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BestialWrath	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_minion_spell_target	^	^	^	^	^	keyword	arg	filter_func	^	^	value	Lambda	args	arguments	args	arg	arg	minion	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Attribute	value	Name	id	minion	^	^	^	^	attr	card	^	^	^	^	attr	minion_type	^	^	^	^	ops	Is	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	Immune	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	CurrentPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_temp_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Betrayal	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Force	an	enemy	minion	to	deal	its	damage	to	the	minions	next	to	it	.
Module	body	ClassDef	name	Betrayal	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Betrayal	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	left_minion	^	^	^	^	value	NameConstant	value	^	^	^	^	Assign	targets	Name	id	right_minion	^	^	^	^	value	NameConstant	value	^	^	^	^	Assign	targets	Name	id	index	^	^	^	^	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	index	^	^	^	^	^	If	test	Compare	left	Name	id	index	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Assign	targets	Name	id	left_minion	^	^	^	^	value	Subscript	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	slice	Index	value	BinOp	left	Name	id	index	^	^	^	^	op	Sub	^	^	right	Num	n	1	^	^	^	^	^	^	^	^	^	^	^	^	orelse	empty	^	^	^	If	test	Compare	left	Name	id	index	^	^	^	^	ops	Lt	^	^	comparators	Call	func	Name	id	min	^	^	^	^	args	BinOp	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	op	Sub	^	^	right	Num	n	1	^	^	^	^	^	Num	n	6	^	^	^	^	keywords	empty	^	^	^	^	^	^	body	Assign	targets	Name	id	right_minion	^	^	^	^	value	Subscript	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	slice	Index	value	BinOp	left	Name	id	index	^	^	^	^	op	Add	^	^	right	Num	n	1	^	^	^	^	^	^	^	^	^	^	^	^	orelse	empty	^	^	^	Assign	targets	Name	id	original_immune	^	^	^	^	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	immune	^	^	^	^	^	Assign	targets	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	immune	^	^	^	^	value	NameConstant	value	True	^	^	^	^	^	If	test	Compare	left	Name	id	left_minion	^	^	^	^	ops	IsNot	^	^	comparators	NameConstant	value	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	left_minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	If	test	Compare	left	Name	id	right_minion	^	^	^	^	ops	IsNot	^	^	comparators	NameConstant	value	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	right_minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	Assign	targets	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	immune	^	^	^	^	value	Name	id	original_immune	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BigGameHunter	NAME_END	4	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Destroy	a	minion	with	an	Attack	of	7	or	more	.
Module	body	ClassDef	name	BigGameHunter	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BigGameHunter	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	AttackGreaterThan	^	^	^	^	args	Num	n	6	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Bite	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Give	your	hero	+	4	Attack	this	turn	and	4	Armor	.
Module	body	ClassDef	name	Bite	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Bite	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	change_temp_attack	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	increase_armor	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BlessingOfWisdom	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Choose	a	minion	.	Whenever	it	attacks	,	draw	a	card	.
Module	body	ClassDef	name	BlessingOfWisdom	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BlessingofWisdom	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Name	id	player	^	^	^	^	ops	Is	^	^	comparators	Subscript	value	Attribute	value	Name	id	game	^	^	^	^	attr	players	^	^	^	^	slice	Index	value	Num	n	0	^	^	^	^	^	^	^	^	^	^	body	Assign	targets	Name	id	draw_player	^	^	^	^	value	Call	func	Name	id	PlayerOne	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	Assign	targets	Name	id	draw_player	^	^	^	^	value	Call	func	Name	id	PlayerTwo	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_effect	^	^	^	^	args	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Name	id	draw_player	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Blizzard	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	2	damage	to	all	enemy	minions	and	<b>	Freeze	</b>	them	.
Module	body	ClassDef	name	Blizzard	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Blizzard	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Frozen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
BloodFury	NAME_END	3	ATK_END	-1	DEF_END	3	COST_END	8	DUR_END	Weapon	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	BloodFury	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BloodFury	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	3	^	^	^	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BloodImp	NAME_END	0	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Common	RARITY_END	<b>	Stealth	</b>	.	At	the	end	of	your	turn	,	give	another	random	friendly	minion	+	1	Health	.
Module	body	ClassDef	name	BloodImp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BloodImp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	stealth	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BloodKnight	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	All	minions	lose	<b>	Divine	Shield	</b>	.	Gain	+	3	/	+	3	for	each	Shield	lost	.
Module	body	ClassDef	name	BloodKnight	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BloodKnight	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Tuple	elts	Call	func	Name	id	Battlecry	^	^	^	^	args	List	elts	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	HasDivineShield	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	HasDivineShield	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	RemoveDivineShields	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	HasDivineShield	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BloodmageThalnos	NAME_END	1	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Spell	Damage	+	1	</b>	.	<b>	Deathrattle	</b>	Draw	a	card	.
Module	body	ClassDef	name	BloodmageThalnos	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BloodmageThalnos	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Num	n	1	^	^	^	^	^	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BloodsailCorsair	NAME_END	1	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Pirate	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Remove	1	Durability	from	your	opponent's	weapon	.
Module	body	ClassDef	name	BloodsailCorsair	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BloodsailCorsair	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	DecreaseDurability	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BloodsailRaider	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Pirate	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Gain	Attack	equal	to	the	Attack	of	your	weapon	.
Module	body	ClassDef	name	BloodsailRaider	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BloodsailRaider	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	base_attack	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CairneBloodhoof	NAME_END	4	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Deathrattle	</b>	Summon	a	4	/	5	Baine	Bloodhoof	.
Module	body	ClassDef	name	CairneBloodhoof	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CairneBloodhoof	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	BaineBloodhoof	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CaptainGreenskin	NAME_END	5	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Pirate	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Give	your	weapon	+	1	/	+	1	.
Module	body	ClassDef	name	CaptainGreenskin	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CaptainGreenskin	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	List	elts	Call	func	Name	id	IncreaseWeaponAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	IncreaseDurability	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Cenarius	NAME_END	5	ATK_END	8	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Choose	One	</b>	-	Give	your	other	minions	+	2	/	+	2	;	or	Summon	two	2	/	2	Treants	with	<b>	Taunt	</b>	.
Module	body	ClassDef	name	Cenarius	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Cenarius	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	IncreaseStats	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Taunt	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	SummonTreants	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	TauntTreant	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CircleOfHealing	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Restore	#	4	Health	to	ALL	minions	.
Module	body	ClassDef	name	CircleOfHealing	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CircleofHealing	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
ColdBlood	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	a	minion	+	2	Attack	.	<b>	Combo	</b>	+	4	Attack	instead	.
Module	body	ClassDef	name	ColdBlood	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ColdBlood	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	cards_played	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ColdlightOracle	NAME_END	2	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Each	player	draws	2	cards	.
Module	body	ClassDef	name	ColdlightOracle	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ColdlightOracle	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ColdlightSeer	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Give	ALL	other	Murlocs	+	2	Health	.
Module	body	ClassDef	name	ColdlightSeer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ColdlightSeer	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CommandingShout	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Your	minions	can't	be	reduced	below	1	Health	this	turn	.	Draw	a	card	.
Module	body	ClassDef	name	CommandingShout	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CommandingShout	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	add_aura	^	^	^	^	args	Call	func	Name	id	AuraUntil	^	^	^	^	args	Call	func	Name	id	MinimumHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Counterspell	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Secret	</b>	When	your	opponent	casts	a	spell	,	<b>	Counter	</b>	it	.
Module	body	ClassDef	name	Counterspell	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Counterspell	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	card	^	^	annotation	^	^	arg	arg	index	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	is_spell	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Attribute	value	Name	id	card	^	^	^	^	attr	cancel	^	^	^	^	value	NameConstant	value	True	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	card_played	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	card_played	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CrazedAlchemist	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Swap	the	Attack	and	Health	of	a	minion	.
Module	body	ClassDef	name	CrazedAlchemist	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CrazedAlchemist	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	SwapStats	^	^	^	^	args	Str	s	health	^	^	^	Str	s	attack	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CruelTaskmaster	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Deal	1	damage	to	a	minion	and	give	it	+	2	Attack	.
Module	body	ClassDef	name	CruelTaskmaster	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CruelTaskmaster	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	List	elts	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CultMaster	NAME_END	4	ATK_END	2	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	one	of	your	other	minions	dies	,	draw	a	card	.
Module	body	ClassDef	name	CultMaster	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CultMaster	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionDied	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DamagedGolem	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	DamagedGolem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DamagedGolem	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DarkIronDwarf	NAME_END	4	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Give	a	minion	+	2	Attack	this	turn	.
Module	body	ClassDef	name	DarkIronDwarf	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DarkIronDwarf	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	CurrentPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DeadlyShot	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Destroy	a	random	enemy	minion	.
Module	body	ClassDef	name	DeadlyShot	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DeadlyShot	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_battlecry_target	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Lambda	args	arguments	args	arg	arg	x	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	NameConstant	value	True	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	target	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	die	^	^	^	^	args	NameConstant	value	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	check_delayed	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	GtE	^	^	comparators	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Deathwing	NAME_END	12	ATK_END	12	DEF_END	10	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Destroy	all	other	minions	and	discard	your	hand	.
Module	body	ClassDef	name	Deathwing	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Deathwing	^	^	^	Num	n	10	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Tuple	elts	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Discard	^	^	^	^	args	empty	^	^	keywords	keyword	arg	amount	^	^	value	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	12	^	^	^	Num	n	12	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DefiasBandit	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	DefiasBandit	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DefiasBandit	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DefiasRingleader	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Combo	</b>	Summon	a	2	/	1	Defias	Bandit	.
Module	body	ClassDef	name	DefiasRingleader	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DefiasRingleader	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	combo	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	DefiasBandit	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Demolisher	NAME_END	1	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Rare	RARITY_END	At	the	start	of	your	turn	,	deal	2	damage	to	a	random	enemy	.
Module	body	ClassDef	name	Demolisher	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Demolisher	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Demonfire	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	2	damage	to	a	minion	.	If	it’s	a	friendly	Demon	,	give	it	+	2	/	+	2	instead	.
Module	body	ClassDef	name	Demonfire	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Demonfire	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	card	^	^	^	^	attr	minion_type	^	^	^	^	ops	Is	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	Compare	left	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	ops	In	^	^	comparators	Name	id	targets	^	^	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Demonfire	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Enchantment	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	This	Demon	has	+	2	/	+	2	.
Module	body	ClassDef	name	Demonfire	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Demonfire	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	card	^	^	^	^	attr	minion_type	^	^	^	^	ops	Is	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	Compare	left	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	ops	In	^	^	comparators	Name	id	targets	^	^	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Devilsaur	NAME_END	5	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Devilsaur	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Devilsaur	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DireWolfAlpha	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	Adjacent	minions	have	+	1	Attack	.
Module	body	ClassDef	name	DireWolfAlpha	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DireWolfAlpha	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	Adjacent	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DivineFavor	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Draw	cards	until	you	have	as	many	in	hand	as	your	opponent	.
Module	body	ClassDef	name	DivineFavor	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DivineFavor	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	difference	^	^	^	^	value	BinOp	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	op	Sub	^	^	right	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Name	id	difference	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Doomsayer	NAME_END	0	ATK_END	7	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	At	the	start	of	your	turn	,	destroy	ALL	minions	.
Module	body	ClassDef	name	Doomsayer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Doomsayer	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	NameConstant	value	^	^	^	^	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DreadCorsair	NAME_END	3	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Pirate	RACE_END	Common	RARITY_END	<b>	Taunt	.	</b>	Costs	(	1	)	less	per	Attack	of	your	weapon	.
Module	body	ClassDef	name	DreadCorsair	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DreadCorsair	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	^	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	attack	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Dream	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Dream	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Return	a	minion	to	its	owner's	hand	.
Module	body	ClassDef	name	Dream	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Dream	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DREAM	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DruidOfTheClaw	NAME_END	4	ATK_END	6	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	DruidOfTheClaw	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DruidoftheClaw	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	CatForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	CatDruid	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	BearForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	BearDruid	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DruidOfTheClaw	NAME_END	4	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Choose	One	-	</b>	<b>	Charge	</b>	;	or	+	2	Health	and	<b>	Taunt	</b>	.
Module	body	ClassDef	name	DruidOfTheClaw	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DruidoftheClaw	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	CatForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	CatDruid	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	BearForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	BearDruid	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DruidOfTheClaw	NAME_END	4	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Charge	</b>
Module	body	ClassDef	name	DruidOfTheClaw	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DruidoftheClaw	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	CatForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	CatDruid	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	BearForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	BearDruid	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DustDevil	NAME_END	3	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Windfury	</b>	.	<b>	Overload	</b>	(	2	)
Module	body	ClassDef	name	DustDevil	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DustDevil	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Num	n	2	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	windfury	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
EaglehornBow	NAME_END	3	ATK_END	-1	DEF_END	3	COST_END	2	DUR_END	Weapon	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	a	friendly	<b>	Secret	</b>	is	revealed	,	gain	+	1	Durability	.
Module	body	ClassDef	name	EaglehornBow	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	EaglehornBow	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SecretRevealed	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	IncreaseDurability	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
EarthenRingFarseer	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Restore	3	Health	.
Module	body	ClassDef	name	EarthenRingFarseer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	EarthenRingFarseer	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
EdwinVanCleef	NAME_END	2	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Combo	</b>	Gain	+	2	/	+	2	for	each	card	played	earlier	this	turn	.
Module	body	ClassDef	name	EdwinVanCleef	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	EdwinVanCleef	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	cards_played	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	cards_played	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
EmeraldDrake	NAME_END	7	ATK_END	6	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Dream	PLAYER_CLS_END	Dragon	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	EmeraldDrake	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	EmeraldDrake	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DREAM	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	6	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
EmperorCobra	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Rare	RARITY_END	Destroy	any	minion	damaged	by	this	minion	.
Module	body	ClassDef	name	EmperorCobra	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	EmperorCobra	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	DidDamage	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TargetSelector	^	^	^	^	args	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Equality	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Change	the	Health	of	ALL	minions	to	1	.
Module	body	ClassDef	name	Equality	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Equality	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	set_health_to	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	BoolOp	op	Or	^	^	values	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
EtherealArcanist	NAME_END	3	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	If	you	control	a	<b>	Secret	</b>	at	the	end	of	your	turn	,	gain	+	2	/	+	2	.
Module	body	ClassDef	name	EtherealArcanist	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	EtherealArcanist	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	Call	func	Name	id	HasSecret	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	Call	func	Name	id	HasSecret	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Eviscerate	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	2	damage	.	<b>	Combo	</b>	Deal	$	4	damage	instead	.
Module	body	ClassDef	name	Eviscerate	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Eviscerate	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	cards_played	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ExplosiveShot	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	5	damage	to	a	minion	and	$	2	damage	to	adjacent	ones	.
Module	body	ClassDef	name	ExplosiveShot	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ExplosiveShot	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	index	^	^	^	^	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	index	^	^	^	^	^	If	test	Compare	left	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	index	^	^	^	^	ops	Lt	^	^	comparators	BinOp	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	op	Sub	^	^	right	Num	n	1	^	^	^	^	^	^	^	^	body	Assign	targets	Name	id	minion	^	^	^	^	value	Subscript	value	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	slice	Index	value	BinOp	left	Name	id	index	^	^	^	^	op	Add	^	^	right	Num	n	1	^	^	^	^	^	^	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	index	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Assign	targets	Name	id	minion	^	^	^	^	value	Subscript	value	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	slice	Index	value	BinOp	left	Name	id	index	^	^	^	^	op	Sub	^	^	right	Num	n	1	^	^	^	^	^	^	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
FacelessManipulator	NAME_END	3	ATK_END	3	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Choose	a	minion	and	become	a	copy	of	it	.
Module	body	ClassDef	name	FacelessManipulator	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FacelessManipulator	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Replace	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FaerieDragon	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Common	RARITY_END	Can't	be	targeted	by	spells	or	Hero	Powers	.
Module	body	ClassDef	name	FaerieDragon	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FaerieDragon	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	spell_targetable	^	^	value	NameConstant	value	False	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FarSight	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Draw	a	card	.	That	card	costs	(	3	)	less	.
Module	body	ClassDef	name	FarSight	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FarSight	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	FunctionDef	name	reduce_cost	^	^	args	arguments	args	arg	arg	card	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	3	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	bind_once	^	^	^	^	args	Str	s	card_drawn	^	^	^	Name	id	reduce_cost	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Felguard	NAME_END	3	ATK_END	5	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Rare	RARITY_END	<b>	Taunt	</b>	.	<b>	Battlecry	</b>	Destroy	one	of	your	Mana	Crystals	.
Module	body	ClassDef	name	Felguard	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Felguard	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	DestroyManaCrystal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FenCreeper	NAME_END	3	ATK_END	6	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	FenCreeper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FenCreeper	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FeralSpirit	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Summon	two	2	/	3	Spirit	Wolves	with	<b>	Taunt	</b>	.	<b>	Overload	</b>	(	2	)
Module	body	ClassDef	name	FeralSpirit	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FeralSpirit	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Num	n	2	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	spirit_wolf	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	cards	^	^	^	^	attr	minions	^	^	^	^	attr	shaman	^	^	^	^	attr	SpiritWolf	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	spirit_wolf	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FinkleEinhorn	NAME_END	3	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	NIL
Module	body	ClassDef	name	FinkleEinhorn	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FinkleEinhorn	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FlameImp	NAME_END	3	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Deal	3	damage	to	your	hero	.
Module	body	ClassDef	name	FlameImp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FlameImp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FlesheatingGhoul	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	a	minion	dies	,	gain	+	1	Attack	.
Module	body	ClassDef	name	FlesheatingGhoul	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FlesheatingGhoul	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionDied	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ForceOfNature	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Summon	three	2	/	2	Treants	with	<b>	Charge	</b>	that	die	at	the	end	of	the	turn	.
Module	body	ClassDef	name	ForceOfNature	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ForceofNature	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	ImportFrom	module	hearthbreaker.cards.minions.druid	^	^	names	alias	name	ChargeTreant	^	^	asname	^	^	^	level	0	^	^	^	For	target	Name	id	i	^	^	^	^	iter	List	elts	Num	n	0	^	^	^	Num	n	1	^	^	^	Num	n	2	^	^	^	^	^	^	body	Assign	targets	Name	id	treant_card	^	^	^	^	value	Call	func	Name	id	ChargeTreant	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	treant_card	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ForkedLightning	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	2	damage	to	2	random	enemy	minions	.	<b>	Overload	</b>	(	2	)
Module	body	ClassDef	name	ForkedLightning	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ForkedLightning	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Num	n	2	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	minions	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	minion	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Name	id	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minions	^	^	^	^	attr	remove	^	^	^	^	args	Name	id	minion	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	GtE	^	^	comparators	Num	n	2	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FreezingTrap	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Secret	</b>	When	an	enemy	minion	attacks	,	return	it	to	its	owner's	hand	and	it	costs	(	2	)	more	.
Module	body	ClassDef	name	FreezingTrap	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FreezingTrap	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	character_attack	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	character_attack	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	attacker	^	^	annotation	^	^	arg	arg	target	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	BoolOp	op	And	^	^	values	Call	func	Name	id	isinstance	^	^	^	^	args	Name	id	attacker	^	^	^	Name	id	Minion	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	Not	^	^	operand	Attribute	value	Name	id	attacker	^	^	^	^	attr	removed	^	^	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	attacker	^	^	^	^	attr	bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	attacker	^	^	^	^	attr	card	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
FrostElemental	NAME_END	5	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	<b>	Freeze	</b>	a	character	.
Module	body	ClassDef	name	FrostElemental	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FrostElemental	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Frozen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FrothingBerserker	NAME_END	2	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	a	minion	takes	damage	,	gain	+	1	Attack	.
Module	body	ClassDef	name	FrothingBerserker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FrothingBerserker	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterDamaged	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	condition	^	^	value	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GadgetzanAuctioneer	NAME_END	4	ATK_END	4	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	you	cast	a	spell	,	draw	a	card	.
Module	body	ClassDef	name	GadgetzanAuctioneer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GadgetzanAuctioneer	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GladiatorsLongbow	NAME_END	5	ATK_END	-1	DEF_END	7	COST_END	2	DUR_END	Weapon	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Your	hero	is	<b>	Immune	</b>	while	attacking	.
Module	body	ClassDef	name	GladiatorsLongbow	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GladiatorsLongbow	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	5	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CharacterAttack	^	^	^	^	args	Call	func	Name	id	IsHero	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	Immune	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	AttackCompleted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GrommashHellscream	NAME_END	4	ATK_END	9	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Charge	</b>	NL	<b>	Enrage	</b>	+	6	Attack
Module	body	ClassDef	name	GrommashHellscream	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GrommashHellscream	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	9	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	enrage	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	6	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Gruul	NAME_END	7	ATK_END	7	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	At	the	end	of	each	turn	,	gain	+	1	/	+	1	.
Module	body	ClassDef	name	Gruul	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Gruul	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HarrisonJones	NAME_END	5	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Destroy	your	opponent's	weapon	and	draw	cards	equal	to	its	Durability	.
Module	body	ClassDef	name	HarrisonJones	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HarrisonJones	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Tuple	elts	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	durability	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Destroy	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HarvestGolem	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Mech	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Summon	a	2	/	1	Damaged	Golem	.
Module	body	ClassDef	name	HarvestGolem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HarvestGolem	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MECH	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	DamagedGolem	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Headcrack	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	2	damage	to	the	enemy	hero	.	<b>	Combo	</b>	Return	this	to	your	hand	next	turn	.
Module	body	ClassDef	name	Headcrack	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Headcrack	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Name	id	player	^	^	^	^	attr	cards_played	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	add_effect	^	^	^	^	args	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
HeavyAxe	NAME_END	1	ATK_END	-1	DEF_END	1	COST_END	3	DUR_END	Weapon	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	HeavyAxe	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HeavyAxe	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	1	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Hogger	NAME_END	4	ATK_END	4	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	At	the	end	of	your	turn	,	summon	a	2	/	2	Gnoll	with	<b>	Taunt	</b>	.
Module	body	ClassDef	name	Hogger	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Hogger	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Gnoll	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HolyFire	NAME_END	-1	ATK_END	-1	DEF_END	6	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	5	damage	.	Restore	#	5	Health	to	your	hero	.
Module	body	ClassDef	name	HolyFire	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HolyFire	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
HungryCrab	NAME_END	1	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Destroy	a	Murloc	and	gain	+	2	/	+	2	.
Module	body	ClassDef	name	HungryCrab	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	HungryCrab	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Tuple	elts	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Hyena	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Rare	RARITY_END	NIL
Module	body	ClassDef	name	Hyena	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Hyena	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
IceBarrier	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Secret	</b>	When	your	hero	is	attacked	,	gain	8	Armor	.
Module	body	ClassDef	name	IceBarrier	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	IceBarrier	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	attacker	^	^	annotation	^	^	arg	arg	target	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	BoolOp	op	And	^	^	values	Compare	left	Name	id	target	^	^	^	^	ops	Is	^	^	comparators	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	hero	^	^	^	^	^	UnaryOp	op	Not	^	^	operand	Attribute	value	Name	id	attacker	^	^	^	^	attr	removed	^	^	^	^	^	^	^	^	body	AugAssign	target	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	attacker	^	^	^	^	attr	player	^	^	^	^	attr	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	attr	armor	^	^	^	^	op	Add	^	^	value	Num	n	8	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	character_attack	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	opponent	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	character_attack	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
IceBlock	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Secret	</b>	When	your	hero	takes	fatal	damage	,	prevent	it	and	become	<b>	Immune	</b>	this	turn	.
Module	body	ClassDef	name	IceBlock	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	IceBlock	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	NameConstant	value	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	character	^	^	annotation	^	^	arg	arg	attacker	^	^	annotation	^	^	arg	arg	amount	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	Call	func	Attribute	value	Name	id	character	^	^	^	^	attr	is_hero	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	body	If	test	Compare	left	BinOp	left	Attribute	value	Name	id	character	^	^	^	^	attr	health	^	^	^	^	op	Sub	^	^	right	Name	id	amount	^	^	^	^	^	^	ops	LtE	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	character	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	Immune	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	CurrentPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	pre_damage	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	pre_damage	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
IceLance	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Freeze	</b>	a	character	.	If	it	was	already	<b>	Frozen	</b>	,	deal	$	4	damage	instead	.
Module	body	ClassDef	name	IceLance	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	IceLance	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	frozen	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Num	n	4	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Frozen	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
IllidanStormrage	NAME_END	7	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Demon	RACE_END	Legendary	RARITY_END	Whenever	you	play	a	card	,	summon	a	2	/	1	Flame	of	Azzinoth	.
Module	body	ClassDef	name	IllidanStormrage	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	IllidanStormrage	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CardPlayed	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	FlameOfAzzinoth	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Imp	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Demon	RACE_END	Rare	RARITY_END	NIL
Module	body	ClassDef	name	Imp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Imp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ImpMaster	NAME_END	1	ATK_END	5	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	At	the	end	of	your	turn	,	deal	1	damage	to	this	minion	and	summon	a	1	/	1	Imp	.
Module	body	ClassDef	name	ImpMaster	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ImpMaster	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Imp	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
InnerFire	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Change	a	minion's	Attack	to	be	equal	to	its	Health	.
Module	body	ClassDef	name	InnerFire	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	InnerFire	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	delta	^	^	^	^	value	BinOp	left	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	health	^	^	^	^	op	Sub	^	^	right	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Name	id	delta	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
InnerRage	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	1	damage	to	a	minion	and	give	it	+	2	Attack	.
Module	body	ClassDef	name	InnerRage	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	InnerRage	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Num	n	1	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
IronbeakOwl	NAME_END	2	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	<b>	Silence	</b>	a	minion	.
Module	body	ClassDef	name	IronbeakOwl	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	IronbeakOwl	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Silence	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
JunglePanther	NAME_END	4	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Stealth	</b>
Module	body	ClassDef	name	JunglePanther	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	JunglePanther	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	stealth	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
KeeperOfTheGrove	NAME_END	2	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Choose	One	</b>	-	Deal	2	damage	;	or	<b>	Silence	</b>	a	minion	.
Module	body	ClassDef	name	KeeperOfTheGrove	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	KeeperoftheGrove	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	Moonfire	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	Dispel	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Silence	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Kidnapper	NAME_END	5	ATK_END	3	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Combo	</b>	Return	a	minion	to	its	owner's	hand	.
Module	body	ClassDef	name	Kidnapper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Kidnapper	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	combo	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
KingKrush	NAME_END	8	ATK_END	8	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Legendary	RARITY_END	<b>	Charge	</b>
Module	body	ClassDef	name	KingKrush	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	KingKrush	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
KingMukla	NAME_END	5	ATK_END	5	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Give	your	opponent	2	Bananas	.
Module	body	ClassDef	name	KingMukla	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	KingMukla	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	Bananas	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LaughingSister	NAME_END	3	ATK_END	5	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Dream	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Can't	be	targeted	by	spells	or	Hero	Powers	.
Module	body	ClassDef	name	LaughingSister	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LaughingSister	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DREAM	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	spell_targetable	^	^	value	NameConstant	value	False	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LavaBurst	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	5	damage	.	<b>	Overload	</b>	(	2	)
Module	body	ClassDef	name	LavaBurst	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LavaBurst	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	keyword	arg	overload	^	^	value	Num	n	2	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LayOnHands	NAME_END	-1	ATK_END	-1	DEF_END	8	COST_END	-1	DUR_END	Spell	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Restore	#	8	Health	.	Draw	3	cards	.
Module	body	ClassDef	name	LayOnHands	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LayonHands	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	heal	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_heal_power	^	^	^	^	args	Num	n	8	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LeeroyJenkins	NAME_END	6	ATK_END	2	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Charge	</b>	.	<b>	Battlecry	</b>	Summon	two	1	/	1	Whelps	for	your	opponent	.
Module	body	ClassDef	name	LeeroyJenkins	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LeeroyJenkins	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Whelp	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	charge	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LeperGnome	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Deal	2	damage	to	the	enemy	hero	.
Module	body	ClassDef	name	LeperGnome	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LeperGnome	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LightningBolt	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	3	damage	.	<b>	Overload	</b>	(	1	)
Module	body	ClassDef	name	LightningBolt	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LightningBolt	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	keyword	arg	overload	^	^	value	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LightningStorm	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	2	-	$	3	damage	to	all	enemy	minions	.	<b>	Overload	</b>	(	2	)
Module	body	ClassDef	name	LightningStorm	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LightningStorm	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Num	n	2	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_amount	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Lightspawn	NAME_END	0	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	This	minion's	Attack	is	always	equal	to	its	Health	.
Module	body	ClassDef	name	Lightspawn	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Lightspawn	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	AttackEqualsHealth	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LootHoarder	NAME_END	2	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Deathrattle	</b>	Draw	a	card	.
Module	body	ClassDef	name	LootHoarder	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LootHoarder	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LordJaraxxus	NAME_END	0	ATK_END	15	DEF_END	0	COST_END	-1	DUR_END	Hero	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Legendary	RARITY_END	NIL
Module	body	ClassDef	name	LordJaraxxus	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LordJaraxxus	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Tuple	elts	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	ReplaceHeroWithMinion	^	^	^	^	args	Call	func	Name	id	Jaraxxus	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Remove	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Equip	^	^	^	^	args	Call	func	Name	id	BloodFury	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	15	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LordJaraxxus	NAME_END	3	ATK_END	15	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Destroy	your	hero	and	replace	it	with	Lord	Jaraxxus	.
Module	body	ClassDef	name	LordJaraxxus	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LordJaraxxus	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Tuple	elts	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	ReplaceHeroWithMinion	^	^	^	^	args	Call	func	Name	id	Jaraxxus	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Remove	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Equip	^	^	^	^	args	Call	func	Name	id	BloodFury	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	15	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LorewalkerCho	NAME_END	0	ATK_END	4	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	Whenever	a	player	casts	a	spell	,	put	a	copy	into	the	other	player’s	hand	.
Module	body	ClassDef	name	LorewalkerCho	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LorewalkerCho	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	LAST_CARD	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	OtherPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MadBomber	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Deal	3	damage	randomly	split	between	all	other	characters	.
Module	body	ClassDef	name	MadBomber	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MadBomber	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Malygos	NAME_END	4	ATK_END	12	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Legendary	RARITY_END	<b>	Spell	Damage	+	5	</b>
Module	body	ClassDef	name	Malygos	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Malygos	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	12	^	^	^	^	keywords	keyword	arg	spell_damage	^	^	value	Num	n	5	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ManaAddict	NAME_END	1	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	you	cast	a	spell	,	gain	+	2	Attack	this	turn	.
Module	body	ClassDef	name	ManaAddict	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ManaAddict	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	BuffUntil	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ManaTideTotem	NAME_END	0	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	Totem	RACE_END	Rare	RARITY_END	At	the	end	of	your	turn	,	draw	a	card	.
Module	body	ClassDef	name	ManaTideTotem	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ManaTideTotem	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	TOTEM	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MarkOfNature	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Choose	One	</b>	-	Give	a	minion	+	4	Attack	;	or	+	4	Health	and	<b>	Taunt	</b>	.
Module	body	ClassDef	name	MarkOfNature	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MarkofNature	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	ClassDef	name	MarkOfNatureAttack	^	^	bases	Name	id	ChoiceCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MarkofNature+4Attack	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	ClassDef	name	MarkOfNatureHealth	^	^	bases	Name	id	ChoiceCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MarkofNature+4Health	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	target	^	^	^	^	attr	taunt	^	^	^	^	value	NameConstant	value	True	^	^	^	^	^	^	returns	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	target	^	^	^	^	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	^	Assign	targets	Name	id	option	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	agent	^	^	^	^	attr	choose_option	^	^	^	^	args	List	elts	Call	func	Name	id	MarkOfNatureAttack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MarkOfNatureHealth	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	option	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MassDispel	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Silence	</b>	all	enemy	minions	.	Draw	a	card	.
Module	body	ClassDef	name	MassDispel	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MassDispel	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	silence	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MasterSwordsmith	NAME_END	1	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	At	the	end	of	your	turn	,	give	another	random	friendly	minion	+	1	Attack	.
Module	body	ClassDef	name	MasterSwordsmith	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MasterSwordsmith	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MasterOfDisguise	NAME_END	4	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Give	a	friendly	minion	<b>	Stealth	</b>	.
Module	body	ClassDef	name	MasterOfDisguise	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MasterofDisguise	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Stealth	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MillhouseManastorm	NAME_END	4	ATK_END	4	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Enemy	spells	cost	(	0	)	next	turn	.
Module	body	ClassDef	name	MillhouseManastorm	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MillhouseManastorm	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	GiveAura	^	^	^	^	args	Call	func	Name	id	AuraUntil	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	100	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsSpell	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MindControlTech	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	If	your	opponent	has	4	or	more	minions	,	take	control	of	one	at	random	.
Module	body	ClassDef	name	MindControlTech	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MindControlTech	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Steal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	condition	^	^	value	NameConstant	value	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	OpponentMinionCountIsGreaterThan	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Mindgames	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Put	a	copy	of	a	random	minion	from	your	opponent's	deck	into	the	battlefield	.
Module	body	ClassDef	name	Mindgames	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Mindgames	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	minion_card	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_draw	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	deck	^	^	^	^	attr	cards	^	^	^	Lambda	args	arguments	args	arg	arg	c	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	And	^	^	values	UnaryOp	op	Not	^	^	operand	Attribute	value	Name	id	c	^	^	^	^	attr	drawn	^	^	^	^	^	Call	func	Name	id	isinstance	^	^	^	^	args	Name	id	c	^	^	^	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	UnaryOp	op	Not	^	^	operand	Name	id	minion_card	^	^	^	^	^	^	body	Assign	targets	Name	id	minion_card	^	^	^	^	value	Call	func	Name	id	ShadowOfNothing	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	Assign	targets	Name	id	minion_card	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Name	id	minion_card	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	minion_card	^	^	^	^	attr	drawn	^	^	^	^	value	NameConstant	value	True	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	minion_card	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Num	n	0	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MirrorEntity	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Secret	</b>	When	your	opponent	plays	a	minion	,	summon	a	copy	of	it	.
Module	body	ClassDef	name	MirrorEntity	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MirrorEntity	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	NameConstant	value	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	minion	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	body	Assign	targets	Name	id	mirror	^	^	^	^	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	mirror	^	^	^	^	attr	add_to_board	^	^	^	^	args	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	minion	^	^	^	^	attr	player	^	^	^	^	attr	trigger	^	^	^	^	args	Str	s	minion_summoned	^	^	^	Name	id	mirror	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	minion	^	^	^	^	attr	player	^	^	^	^	attr	trigger	^	^	^	^	args	Str	s	after_added	^	^	^	Name	id	mirror	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	minion_played	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	minion_played	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	NameConstant	value	^	^	^	^	^	returns	^	^	^	^	^	^	
MoltenGiant	NAME_END	8	ATK_END	8	DEF_END	20	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Costs	(	1	)	less	for	each	damage	your	hero	has	taken	.
Module	body	ClassDef	name	MoltenGiant	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MoltenGiant	^	^	^	Num	n	20	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	damage	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MortalStrike	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	4	damage	.	If	you	have	12	or	less	Health	,	deal	$	6	instead	.
Module	body	ClassDef	name	MortalStrike	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MortalStrike	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	health	^	^	^	^	ops	LtE	^	^	comparators	Num	n	12	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	6	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MountainGiant	NAME_END	8	ATK_END	8	DEF_END	12	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Costs	(	1	)	less	for	each	other	card	in	your	hand	.
Module	body	ClassDef	name	MountainGiant	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MountainGiant	^	^	^	Num	n	12	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MurlocTidecaller	NAME_END	1	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Rare	RARITY_END	Whenever	a	Murloc	is	summoned	,	gain	+	1	Attack	.
Module	body	ClassDef	name	MurlocTidecaller	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MurlocTidecaller	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionSummoned	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MurlocWarleader	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Murloc	RACE_END	Epic	RARITY_END	ALL	other	Murlocs	have	+	2	/	+	1	.
Module	body	ClassDef	name	MurlocWarleader	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MurlocWarleader	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	MURLOC	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
NatPagle	NAME_END	0	ATK_END	4	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	At	the	start	of	your	turn	,	you	have	a	50%	chance	to	draw	an	extra	card	.
Module	body	ClassDef	name	NatPagle	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	NatPagle	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	OneIn	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Naturalize	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Destroy	a	minion	.	Your	opponent	draws	2	cards	.
Module	body	ClassDef	name	Naturalize	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Naturalize	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Nightmare	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Dream	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Give	a	minion	+	5	/	+	5	.	At	the	start	of	your	next	turn	,	destroy	it	.
Module	body	ClassDef	name	Nightmare	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Nightmare	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DREAM	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_effect	^	^	^	^	args	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	keyword	arg	player	^	^	value	Call	func	Name	id	CurrentPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Nozdormu	NAME_END	8	ATK_END	8	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Legendary	RARITY_END	Players	only	have	15	seconds	to	take	their	turns	.
Module	body	ClassDef	name	Nozdormu	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Nozdormu	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Onyxia	NAME_END	8	ATK_END	8	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Summon	1	/	1	Whelps	until	your	side	of	the	battlefield	is	full	.
Module	body	ClassDef	name	Onyxia	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Onyxia	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Whelp	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Num	n	6	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Panther	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Panther	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Panther	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	_	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
PatientAssassin	NAME_END	1	ATK_END	1	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Stealth	</b>	.	Destroy	any	minion	damaged	by	this	minion	.
Module	body	ClassDef	name	PatientAssassin	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	PatientAssassin	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	stealth	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	DidDamage	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	TargetSelector	^	^	^	^	args	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
PerditionsBlade	NAME_END	2	ATK_END	-1	DEF_END	3	COST_END	2	DUR_END	Weapon	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Deal	1	damage	.	<b>	Combo	</b>	Deal	2	instead	.
Module	body	ClassDef	name	PerditionsBlade	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	PerditionsBlade	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	NameConstant	value	^	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	keyword	arg	combo	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	NameConstant	value	^	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
PintSizedSummoner	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	The	first	minion	you	play	each	turn	costs	(	1	)	less	.
Module	body	ClassDef	name	PintSizedSummoner	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	PintSizedSummoner	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnStarted	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	GiveAura	^	^	^	^	args	Call	func	Name	id	AuraUntil	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	MinionPlaced	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
PitLord	NAME_END	5	ATK_END	6	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Epic	RARITY_END	<b>	Battlecry	</b>	Deal	5	damage	to	your	hero	.
Module	body	ClassDef	name	PitLord	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	PitLord	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	6	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
PowerOverwhelming	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	a	friendly	minion	+	4	/	+	4	until	end	of	turn	.	Then	,	it	dies	.	Horribly	.
Module	body	ClassDef	name	PowerOverwhelming	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	PowerOverwhelming	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	add_effect	^	^	^	^	args	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
PriestessOfElune	NAME_END	5	ATK_END	4	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Restore	4	Health	to	your	hero	.
Module	body	ClassDef	name	PriestessOfElune	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	PriestessofElune	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Heal	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ProphetVelen	NAME_END	7	ATK_END	7	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	Double	the	damage	and	healing	of	your	spells	and	Hero	Power	.
Module	body	ClassDef	name	ProphetVelen	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ProphetVelen	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	MultiplySpellDamage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	MultiplyHealAmount	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Pyroblast	NAME_END	-1	ATK_END	-1	DEF_END	10	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Deal	$	10	damage	.
Module	body	ClassDef	name	Pyroblast	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Pyroblast	^	^	^	Num	n	10	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	10	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
QuestingAdventurer	NAME_END	2	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	you	play	a	card	,	gain	+	1	/	+	1	.
Module	body	ClassDef	name	QuestingAdventurer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	QuestingAdventurer	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CardPlayed	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
RagingWorgen	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Enrage	</b>	<b>	Windfury	</b>	and	+	1	Attack
Module	body	ClassDef	name	RagingWorgen	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RagingWorgen	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	enrage	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	Windfury	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
RagnarosTheFirelord	NAME_END	8	ATK_END	8	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	Can't	attack	.	At	the	end	of	your	turn	,	deal	8	damage	to	a	random	enemy	.
Module	body	ClassDef	name	RagnarosTheFirelord	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RagnarostheFirelord	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	8	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	CantAttack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Rampage	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	a	damaged	minion	+	3	/	+	3	.
Module	body	ClassDef	name	Rampage	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Rampage	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	keyword	arg	filter_func	^	^	value	Lambda	args	arguments	args	arg	arg	target	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	And	^	^	values	Compare	left	Attribute	value	Name	id	target	^	^	^	^	attr	health	^	^	^	^	ops	NotEq	^	^	comparators	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	calculate_max_health	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	spell_targetable	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	change_attack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	increase_health	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
RavenholdtAssassin	NAME_END	7	ATK_END	5	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Stealth	</b>
Module	body	ClassDef	name	RavenholdtAssassin	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RavenholdtAssassin	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	stealth	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SI7Agent	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Combo	</b>	Deal	2	damage	.
Module	body	ClassDef	name	SI7Agent	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SI7Agent	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	combo	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Savagery	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	damage	equal	to	your	hero's	Attack	to	a	minion	.
Module	body	ClassDef	name	Savagery	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Savagery	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SavannahHighmane	NAME_END	6	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Rare	RARITY_END	<b>	Deathrattle	</b>	Summon	two	2	/	2	Hyenas	.
Module	body	ClassDef	name	SavannahHighmane	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SavannahHighmane	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Hyena	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ScarletCrusader	NAME_END	3	ATK_END	1	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Divine	Shield	</b>
Module	body	ClassDef	name	ScarletCrusader	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ScarletCrusader	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ScavengingHyena	NAME_END	2	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	Whenever	a	friendly	Beast	dies	,	gain	+	2	/	+	1	.
Module	body	ClassDef	name	ScavengingHyena	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ScavengingHyena	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionDied	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionDied	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SeaGiant	NAME_END	8	ATK_END	8	DEF_END	10	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Costs	(	1	)	less	for	each	other	minion	on	the	battlefield	.
Module	body	ClassDef	name	SeaGiant	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SeaGiant	^	^	^	Num	n	10	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	MinionSelector	^	^	^	^	args	NameConstant	value	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Secretkeeper	NAME_END	1	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	a	<b>	Secret	</b>	is	played	,	gain	+	1	/	+	1	.
Module	body	ClassDef	name	Secretkeeper	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Secretkeeper	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	Call	func	Name	id	IsSecret	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SenseDemons	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Put	2	random	Demons	from	your	deck	into	your	hand	.
Module	body	ClassDef	name	SenseDemons	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SenseDemons	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	demon_card	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_draw	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	deck	^	^	^	^	attr	cards	^	^	^	Lambda	args	arguments	args	arg	arg	c	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	And	^	^	values	UnaryOp	op	Not	^	^	operand	Attribute	value	Name	id	c	^	^	^	^	attr	drawn	^	^	^	^	^	Call	func	Attribute	value	Name	id	c	^	^	^	^	attr	is_minion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Compare	left	Attribute	value	Name	id	c	^	^	^	^	attr	minion_type	^	^	^	^	ops	Eq	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Name	id	demon_card	^	^	^	^	body	Assign	targets	Attribute	value	Name	id	demon_card	^	^	^	^	attr	drawn	^	^	^	^	value	NameConstant	value	True	^	^	^	^	^	AugAssign	target	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	deck	^	^	^	^	attr	left	^	^	^	^	op	Sub	^	^	value	Num	n	1	^	^	^	^	^	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	10	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	attr	append	^	^	^	^	args	Name	id	demon_card	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	demon_card	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	self	^	^	^	^	attr	trigger	^	^	^	^	args	Str	s	card_drawn	^	^	^	Name	id	demon_card	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	trigger	^	^	^	^	args	Str	s	card_destroyed	^	^	^	Name	id	demon_card	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	orelse	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	10	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	attr	append	^	^	^	^	args	Call	func	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	cards	^	^	^	^	attr	minions	^	^	^	^	attr	warlock	^	^	^	^	attr	WorthlessImp	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Subscript	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	slice	Index	value	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	self	^	^	^	^	attr	trigger	^	^	^	^	args	Str	s	card_drawn	^	^	^	Call	func	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	cards	^	^	^	^	attr	minions	^	^	^	^	attr	warlock	^	^	^	^	attr	WorthlessImp	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Shadowflame	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Destroy	a	friendly	minion	and	deal	its	Attack	damage	to	all	enemy	minions	.
Module	body	ClassDef	name	Shadowflame	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Shadowflame	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	shadowflame_damage	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	calculate_attack	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Name	id	shadowflame_damage	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Shadowform	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Your	Hero	Power	becomes	'Deal	2	damage'	.	If	already	in	Shadowform	3	damage	.
Module	body	ClassDef	name	Shadowform	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Shadowform	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	BoolOp	op	And	^	^	values	Compare	left	Call	func	Name	id	type	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	power	^	^	^	^	keywords	empty	^	^	^	^	ops	IsNot	^	^	comparators	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	powers	^	^	^	^	attr	MindShatter	^	^	^	^	^	Compare	left	Call	func	Name	id	type	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	power	^	^	^	^	keywords	empty	^	^	^	^	ops	IsNot	^	^	comparators	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	powers	^	^	^	^	attr	MindSpike	^	^	^	^	^	^	^	^	body	Assign	targets	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	power	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	powers	^	^	^	^	attr	MindSpike	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	power	^	^	^	^	attr	hero	^	^	^	^	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	^	^	orelse	If	test	Compare	left	Call	func	Name	id	type	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	power	^	^	^	^	keywords	empty	^	^	^	^	ops	Is	^	^	comparators	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	powers	^	^	^	^	attr	MindSpike	^	^	^	^	^	^	body	Assign	targets	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	power	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	powers	^	^	^	^	attr	MindShatter	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	power	^	^	^	^	attr	hero	^	^	^	^	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	^	^	orelse	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Shadowstep	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Return	a	friendly	minion	to	your	hand	.	It	costs	(	2	)	less	.
Module	body	ClassDef	name	Shadowstep	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Shadowstep	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_friendly_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	card	^	^	^	^	attr	add_buff	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	3	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ShieldSlam	NAME_END	-1	ATK_END	-1	DEF_END	1	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Deal	1	damage	to	a	minion	for	each	Armor	you	have	.
Module	body	ClassDef	name	ShieldSlam	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ShieldSlam	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	armor	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Shieldbearer	NAME_END	0	ATK_END	4	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	Shieldbearer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Shieldbearer	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Silence	NAME_END	-1	ATK_END	-1	DEF_END	0	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Silence	</b>	a	minion	.
Module	body	ClassDef	name	Silence	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Silence	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	silence	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SilverHandKnight	NAME_END	4	ATK_END	4	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Summon	a	2	/	2	Squire	.
Module	body	ClassDef	name	SilverHandKnight	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SilverHandKnight	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Squire	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SilvermoonGuardian	NAME_END	3	ATK_END	3	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Divine	Shield	</b>
Module	body	ClassDef	name	SilvermoonGuardian	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SilvermoonGuardian	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Snake	NAME_END	1	ATK_END	1	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Snake	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Snake	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SnakeTrap	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Secret	</b>	When	one	of	your	minions	is	attacked	,	summon	three	1	/	1	Snakes	.
Module	body	ClassDef	name	SnakeTrap	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SnakeTrap	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	character_attack	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	character_attack	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	attacker	^	^	annotation	^	^	arg	arg	target	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	Call	func	Name	id	isinstance	^	^	^	^	args	Name	id	target	^	^	^	Name	id	Minion	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	snake	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	cards	^	^	^	^	attr	minions	^	^	^	^	attr	hunter	^	^	^	^	attr	Snake	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	player	^	^	^	^	value	Attribute	value	Attribute	value	Attribute	value	Name	id	target	^	^	^	^	attr	player	^	^	^	^	attr	game	^	^	^	^	attr	other_player	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	snake	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Snipe	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Secret	</b>	When	your	opponent	plays	a	minion	,	deal	$	4	damage	to	it	.
Module	body	ClassDef	name	Snipe	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Snipe	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	minion_played	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	minion_played	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	minion	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Num	n	4	^	^	^	NameConstant	value	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SorcerersApprentice	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Your	spells	cost	(	1	)	less	.
Module	body	ClassDef	name	SorcerersApprentice	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SorcerersApprentice	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsSpell	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SoulOfTheForest	NAME_END	-1	ATK_END	-1	DEF_END	4	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Give	your	minions	"	<b>	Deathrattle	</b>	Summon	a	2	/	2	Treant	.	"
Module	body	ClassDef	name	SoulOfTheForest	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SouloftheForest	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	ImportFrom	module	hearthbreaker.cards.minions.druid	^	^	names	alias	name	Treant	^	^	asname	^	^	^	level	0	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	minion	^	^	^	^	attr	deathrattle	^	^	^	^	attr	append	^	^	^	^	args	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Treant	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
SouthseaCaptain	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Pirate	RACE_END	Epic	RARITY_END	Your	other	Pirates	have	+	1	/	+	1	.
Module	body	ClassDef	name	SouthseaCaptain	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SouthseaCaptain	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SouthseaDeckhand	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Pirate	RACE_END	Common	RARITY_END	Has	<b>	Charge	</b>	while	you	have	a	weapon	equipped	.
Module	body	ClassDef	name	SouthseaDeckhand	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SouthseaDeckhand	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	PIRATE	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	Charge	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	WeaponSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Spellbender	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	<b>	Secret	</b>	When	an	enemy	casts	a	spell	on	a	minion	,	summon	a	1	/	3	as	the	new	target	.
Module	body	ClassDef	name	Spellbender	^	^	bases	Name	id	SecretCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Spellbender	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	NameConstant	value	^	^	^	^	^	returns	^	^	FunctionDef	name	_reveal	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	card	^	^	annotation	^	^	arg	arg	index	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	If	test	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	is_spell	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	Attribute	value	Name	id	card	^	^	^	^	attr	target	^	^	^	Call	func	Attribute	value	Attribute	value	Name	id	card	^	^	^	^	attr	target	^	^	^	^	attr	is_minion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	SpellbenderMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	summon	^	^	^	^	args	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	card	^	^	^	^	attr	target	^	^	^	^	value	Subscript	value	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	attr	minions	^	^	^	^	slice	Index	value	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	reveal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	activate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	bind	^	^	^	^	args	Str	s	card_played	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	^	^	returns	^	^	FunctionDef	name	deactivate	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	unbind	^	^	^	^	args	Str	s	card_played	^	^	^	Attribute	value	Name	id	self	^	^	^	^	attr	_reveal	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	self	^	^	^	^	attr	player	^	^	^	^	value	NameConstant	value	^	^	^	^	^	returns	^	^	^	^	^	^	
SpiritWolf	NAME_END	2	ATK_END	3	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	SpiritWolf	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SpiritWolf	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SpitefulSmith	NAME_END	4	ATK_END	6	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Enrage	</b>	Your	weapon	has	+	2	Attack	.
Module	body	ClassDef	name	SpitefulSmith	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SpitefulSmith	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	enrage	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Squire	NAME_END	2	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Squire	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Squire	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Squirrel	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	Squirrel	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Squirrel	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StampedingKodo	NAME_END	3	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Destroy	a	random	enemy	minion	with	2	or	less	Attack	.
Module	body	ClassDef	name	StampedingKodo	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StampedingKodo	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	AttackLessThanOrEqualTo	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Starfall	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Choose	One	-	</b>	Deal	$	5	damage	to	a	minion	;	or	$	2	damage	to	all	enemy	minions	.
Module	body	ClassDef	name	Starfall	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Starfall	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	option	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	agent	^	^	^	^	attr	choose_option	^	^	^	^	args	List	elts	Call	func	Name	id	DamageAll	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	DamageOne	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	option	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StormforgedAxe	NAME_END	2	ATK_END	-1	DEF_END	2	COST_END	3	DUR_END	Weapon	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Overload	</b>	(	1	)
Module	body	ClassDef	name	StormforgedAxe	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StormforgedAxe	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Num	n	1	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
StranglethornTiger	NAME_END	5	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Stealth	</b>
Module	body	ClassDef	name	StranglethornTiger	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	StranglethornTiger	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	stealth	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Sunwalker	NAME_END	4	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Taunt	</b>	NL	<b>	Divine	Shield	</b>
Module	body	ClassDef	name	Sunwalker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Sunwalker	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SwordOfJustice	NAME_END	1	ATK_END	-1	DEF_END	3	COST_END	5	DUR_END	Weapon	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Whenever	you	summon	a	minion	,	give	it	+	1	/	+	1	and	this	loses	1	Durability	.
Module	body	ClassDef	name	SwordOfJustice	^	^	bases	Name	id	WeaponCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SwordofJustice	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_weapon	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Weapon	^	^	^	^	args	Num	n	1	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionSummoned	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	TargetSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	MinionSummoned	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	DecreaseDurability	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	WeaponSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
SylvanasWindrunner	NAME_END	5	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Deathrattle	</b>	Take	control	of	a	random	enemy	minion	.
Module	body	ClassDef	name	SylvanasWindrunner	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	SylvanasWindrunner	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Steal	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TaurenWarrior	NAME_END	2	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Taunt	</b>	.	<b>	Enrage	</b>	+	3	Attack
Module	body	ClassDef	name	TaurenWarrior	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TaurenWarrior	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	enrage	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TempleEnforcer	NAME_END	6	ATK_END	6	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Give	a	friendly	minion	+	3	Health	.
Module	body	ClassDef	name	TempleEnforcer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TempleEnforcer	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	6	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TheBeast	NAME_END	9	ATK_END	7	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Legendary	RARITY_END	<b>	Deathrattle	</b>	Summon	a	3	/	3	Finkle	Einhorn	for	your	opponent	.
Module	body	ClassDef	name	TheBeast	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TheBeast	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	9	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	FinkleEinhorn	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TheBlackKnight	NAME_END	4	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Destroy	an	enemy	minion	with	<b>	Taunt	</b>	.
Module	body	ClassDef	name	TheBlackKnight	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TheBlackKnight	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	HasStatus	^	^	^	^	args	Str	s	taunt	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Thoughtsteal	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Copy	2	cards	from	your	opponent's	deck	and	put	them	into	your	hand	.
Module	body	ClassDef	name	Thoughtsteal	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Thoughtsteal	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	new_card	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_draw	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	deck	^	^	^	^	attr	cards	^	^	^	Lambda	args	arguments	args	arg	arg	c	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	UnaryOp	op	Not	^	^	operand	Attribute	value	Name	id	c	^	^	^	^	attr	drawn	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Name	id	new_card	^	^	^	^	body	Assign	targets	Name	id	new_card	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Name	id	new_card	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	new_card	^	^	^	^	attr	drawn	^	^	^	^	value	NameConstant	value	True	^	^	^	^	^	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	10	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	attr	append	^	^	^	^	args	Name	id	new_card	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	new_card	^	^	^	^	attr	player	^	^	^	^	value	Name	id	player	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	self	^	^	^	^	attr	trigger	^	^	^	^	args	Str	s	card_drawn	^	^	^	Name	id	new_card	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	trigger	^	^	^	^	args	Str	s	card_destroyed	^	^	^	Name	id	new_card	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
TirionFordring	NAME_END	6	ATK_END	6	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Divine	Shield	</b>	.	<b>	Taunt	</b>	.	<b>	Deathrattle	</b>	Equip	a	5	/	3	Ashbringer	.
Module	body	ClassDef	name	TirionFordring	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TirionFordring	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	divine_shield	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	keyword	arg	deathrattle	^	^	value	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Equip	^	^	^	^	args	Call	func	Name	id	Ashbringer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Treant	NAME_END	2	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Charge	</b>	.	At	the	end	of	the	turn	,	destroy	this	minion	.
Module	body	ClassDef	name	Treant	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Treant	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	_	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Treant	NAME_END	2	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Treant	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Treant	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	_	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Treant	NAME_END	2	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	<b>	Taunt	</b>
Module	body	ClassDef	name	Treant	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Treant	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	_	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TwilightDrake	NAME_END	4	ATK_END	1	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Gain	+	1	Health	for	each	card	in	your	hand	.
Module	body	ClassDef	name	TwilightDrake	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TwilightDrake	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
TwistingNether	NAME_END	-1	ATK_END	-1	DEF_END	8	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Epic	RARITY_END	Destroy	all	minions	.
Module	body	ClassDef	name	TwistingNether	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	TwistingNether	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	EPIC	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	die	^	^	^	^	args	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
UnboundElemental	NAME_END	2	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	you	play	a	card	with	<b>	Overload	</b>	,	gain	+	1	/	+	1	.
Module	body	ClassDef	name	UnboundElemental	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	UnboundElemental	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CardPlayed	^	^	^	^	args	Call	func	Name	id	HasOverload	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CardPlayed	^	^	^	^	args	Call	func	Name	id	HasOverload	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
UnleashTheHounds	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	For	each	enemy	minion	,	summon	a	1	/	1	Hound	with	<b>	Charge	</b>	.
Module	body	ClassDef	name	UnleashTheHounds	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	UnleashtheHounds	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	target	^	^	^	^	iter	Call	func	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_enemy_minion_spell_target	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	Lambda	args	arguments	args	arg	arg	x	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	NameConstant	value	True	^	^	^	^	^	^	keywords	empty	^	^	^	^	body	Assign	targets	Name	id	hound	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	cards	^	^	^	^	attr	minions	^	^	^	^	attr	hunter	^	^	^	^	attr	Hound	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	hound	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	FunctionDef	name	can_use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	BoolOp	op	And	^	^	values	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	can_use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	GtE	^	^	comparators	Num	n	1	^	^	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
VentureCoMercenary	NAME_END	7	ATK_END	6	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Your	minions	cost	(	3	)	more	.
Module	body	ClassDef	name	VentureCoMercenary	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	VentureCo.Mercenary	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	6	^	^	^	^	keywords	keyword	arg	auras	^	^	value	List	elts	Call	func	Name	id	Aura	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsMinion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
VioletApprentice	NAME_END	1	ATK_END	1	DEF_END	0	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	VioletApprentice	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	VioletApprentice	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
VioletTeacher	NAME_END	3	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	you	cast	a	spell	,	summon	a	1	/	1	Violet	Apprentice	.
Module	body	ClassDef	name	VioletTeacher	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	VioletTeacher	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	SpellCast	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	VioletApprentice	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
VoidTerror	NAME_END	3	ATK_END	3	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Destroy	the	minions	on	either	side	of	this	minion	and	gain	their	Attack	and	Health	.
Module	body	ClassDef	name	VoidTerror	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	VoidTerror	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Tuple	elts	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	health	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	Adjacent	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	attack	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	Adjacent	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	Adjacent	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Whelp	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Whelp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Whelp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Whelp	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Whelp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Whelp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WildPyromancer	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	After	you	cast	a	spell	,	deal	1	damage	to	ALL	minions	.
Module	body	ClassDef	name	WildPyromancer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WildPyromancer	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CardUsed	^	^	^	^	args	Call	func	Name	id	IsSpell	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	NameConstant	value	^	^	^	^	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WindfuryHarpy	NAME_END	4	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Windfury	</b>
Module	body	ClassDef	name	WindfuryHarpy	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WindfuryHarpy	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	windfury	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
WorthlessImp	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Common	RARITY_END	<i>	You	are	out	of	demons!	At	least	there	are	always	imps	.	.	.	</i>
Module	body	ClassDef	name	WorthlessImp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	WorthlessImp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	p	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Wrath	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Choose	One	</b>	-	Deal	$	3	damage	to	a	minion	;	or	$	1	damage	and	draw	a	card	.
Module	body	ClassDef	name	Wrath	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Wrath	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	ClassDef	name	WrathOne	^	^	bases	Name	id	ChoiceCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Wrath1Damage	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	wrath	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	ClassDef	name	WrathThree	^	^	bases	Name	id	ChoiceCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Wrath3Damage	^	^	^	Num	n	0	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	wrath	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	option	^	^	^	^	value	Call	func	Attribute	value	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	agent	^	^	^	^	attr	choose_option	^	^	^	^	args	List	elts	Call	func	Name	id	WrathOne	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	WrathThree	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Name	id	player	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	target	^	^	^	^	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	^	Assign	targets	Name	id	wrath	^	^	^	^	value	Name	id	self	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	option	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
YoungDragonhawk	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	<b>	Windfury	</b>
Module	body	ClassDef	name	YoungDragonhawk	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	YoungDragonhawk	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	windfury	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
YoungPriestess	NAME_END	2	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	At	the	end	of	your	turn	,	give	another	random	friendly	minion	+	1	Health	.
Module	body	ClassDef	name	YoungPriestess	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	YoungPriestess	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	1	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	RandomPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
YouthfulBrewmaster	NAME_END	3	ATK_END	2	DEF_END	2	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Return	a	friendly	minion	from	the	battlefield	to	your	hand	.
Module	body	ClassDef	name	YouthfulBrewmaster	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	YouthfulBrewmaster	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Bounce	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	picker	^	^	value	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Ysera	NAME_END	4	ATK_END	12	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Legendary	RARITY_END	At	the	end	of	your	turn	,	add	a	Dream	Card	to	your	hand	.
Module	body	ClassDef	name	Ysera	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Ysera	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Assign	targets	Name	id	dream_card_list	^	^	^	^	value	List	elts	Call	func	Name	id	EmeraldDrake	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	LaughingSister	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Nightmare	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	YseraAwakens	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Dream	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	12	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	LIST	^	^	^	^	^	keyword	arg	source_list	^	^	value	Name	id	dream_card_list	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
YseraAwakens	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Dream	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	Deal	$	5	damage	to	all	characters	except	Ysera	.
Module	body	ClassDef	name	YseraAwakens	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	YseraAwakens	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DREAM	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	other_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	append	^	^	^	^	args	Attribute	value	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	game	^	^	^	^	attr	current_player	^	^	^	^	attr	hero	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Name	id	filter	^	^	^	^	args	Lambda	args	arguments	args	arg	arg	m	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	BoolOp	op	Or	^	^	values	UnaryOp	op	Not	^	^	operand	Call	func	Attribute	value	Name	id	m	^	^	^	^	attr	is_minion	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	Compare	left	Attribute	value	Attribute	value	Name	id	m	^	^	^	^	attr	card	^	^	^	^	attr	name	^	^	^	^	ops	NotEq	^	^	comparators	Str	s	Ysera	^	^	^	^	^	^	^	^	^	Name	id	targets	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	5	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
AxeFlinger	NAME_END	2	ATK_END	5	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Whenever	this	minion	takes	damage	,	deal	2	damage	to	the	enemy	hero	.
Module	body	ClassDef	name	AxeFlinger	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	AxeFlinger	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Damaged	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
BlackwingTechnician	NAME_END	2	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	If	you're	holding	a	Dragon	,	gain	+	1	/	+	1	.
Module	body	ClassDef	name	BlackwingTechnician	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	BlackwingTechnician	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Chromaggus	NAME_END	6	ATK_END	8	DEF_END	8	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Legendary	RARITY_END	Whenever	you	draw	a	card	,	put	another	copy	into	your	hand	.
Module	body	ClassDef	name	Chromaggus	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Chromaggus	^	^	^	Num	n	8	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	8	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CardDrawn	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	List	elts	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	source	^	^	value	Attribute	value	Name	id	CARD_SOURCE	^	^	^	^	attr	LAST_DRAWN	^	^	^	^	^	keyword	arg	make_copy	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
CoreRager	NAME_END	4	ATK_END	4	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Hunter	PLAYER_CLS_END	Beast	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	If	your	hand	is	empty	,	gain	+	3	/	+	3	.
Module	body	ClassDef	name	CoreRager	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	CoreRager	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	BEAST	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeHealth	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Not	^	^	^	^	args	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DarkIronSkulker	NAME_END	4	ATK_END	3	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	Deal	2	damage	to	all	undamaged	enemy	minions	.
Module	body	ClassDef	name	DarkIronSkulker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DarkIronSkulker	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	Not	^	^	^	^	args	Call	func	Name	id	IsDamaged	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	keyword	arg	players	^	^	value	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	4	^	^	^	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Demonwrath	NAME_END	-1	ATK_END	-1	DEF_END	3	COST_END	-1	DUR_END	Spell	TYPE_END	Warlock	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	2	damage	to	all	non	-	Demon	minions	.
Module	body	ClassDef	name	Demonwrath	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Demonwrath	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	If	test	Compare	left	Attribute	value	Attribute	value	Name	id	minion	^	^	^	^	attr	card	^	^	^	^	attr	minion_type	^	^	^	^	ops	IsNot	^	^	comparators	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
DragonConsort	NAME_END	5	ATK_END	5	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Paladin	PLAYER_CLS_END	Dragon	RACE_END	Rare	RARITY_END	<b>	Battlecry	</b>	The	next	Dragon	you	play	costs	(	2	)	less	.
Module	body	ClassDef	name	DragonConsort	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DragonConsort	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PALADIN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	GiveAura	^	^	^	^	args	List	elts	Call	func	Name	id	AuraUntil	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	3	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	Call	func	Name	id	CardPlayed	^	^	^	^	args	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	NameConstant	value	False	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DragonEgg	NAME_END	0	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	this	minion	takes	damage	,	summon	a	2	/	1	Whelp	.
Module	body	ClassDef	name	DragonEgg	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DragonEgg	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	0	^	^	^	Num	n	2	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Damaged	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	BlackWhelp	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DragonsBreath	NAME_END	-1	ATK_END	-1	DEF_END	5	COST_END	-1	DUR_END	Spell	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	4	damage	.	Costs	(	1	)	less	for	each	minion	that	died	this	turn	.
Module	body	ClassDef	name	DragonsBreath	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DragonsBreath	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	DeadMinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	4	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DruidOfTheFlame	NAME_END	5	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	DruidOfTheFlame	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DruidoftheFlame	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	FlameCatForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	FlameCat	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	FlameBirdForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	FlameBird	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DruidOfTheFlame	NAME_END	2	ATK_END	2	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Choose	One	</b>	-	Transform	into	a	5	/	2	minion	;	or	a	2	/	5	minion	.
Module	body	ClassDef	name	DruidOfTheFlame	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DruidoftheFlame	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	FlameCatForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	FlameCat	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	FlameBirdForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	FlameBird	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
DruidOfTheFlame	NAME_END	2	ATK_END	5	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	Beast	RACE_END	Common	RARITY_END	NIL
Module	body	ClassDef	name	DruidOfTheFlame	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	DruidoftheFlame	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	choices	^	^	value	List	elts	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	FlameCatForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	FlameCat	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	Choice	^	^	^	^	args	Call	func	Name	id	FlameBirdForm	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	FlameBird	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
EmperorThaurissan	NAME_END	5	ATK_END	5	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	At	the	end	of	your	turn	,	reduce	the	Cost	of	cards	in	your	hand	by	(	1	)	.
Module	body	ClassDef	name	EmperorThaurissan	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	EmperorThaurissan	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	5	^	^	^	Num	n	5	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	TurnEnded	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	List	elts	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
FireguardDestroyer	NAME_END	3	ATK_END	6	DEF_END	4	COST_END	-1	DUR_END	Minion	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	<b>	Battlecry	</b>	Gain	1	-	4	Attack	.	<b>	Overload	</b>	(	1	)
Module	body	ClassDef	name	FireguardDestroyer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	FireguardDestroyer	^	^	^	Num	n	4	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	overload	^	^	value	Num	n	1	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Give	^	^	^	^	args	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ChangeAttack	^	^	^	^	args	Call	func	Name	id	RandomAmount	^	^	^	^	args	Num	n	1	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	6	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Flamewaker	NAME_END	2	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Mage	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	After	you	cast	a	spell	,	deal	2	damage	randomly	split	among	all	enemies	.
Module	body	ClassDef	name	Flamewaker	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Flamewaker	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	MAGE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	CardUsed	^	^	^	^	args	Call	func	Name	id	IsSpell	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	CharacterSelector	^	^	^	^	args	NameConstant	value	^	^	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	RandomPicker	^	^	^	^	args	Num	n	2	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
GangUp	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Rogue	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Choose	a	minion	.	Shuffle	3	copies	of	it	into	your	deck	.
Module	body	ClassDef	name	GangUp	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GangUp	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ROGUE	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_minion_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	For	target	Name	id	i	^	^	^	^	iter	Call	func	Name	id	range	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	put_back	^	^	^	^	args	Call	func	Call	func	Name	id	type	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	card	^	^	^	^	keywords	empty	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
GrimPatron	NAME_END	3	ATK_END	3	DEF_END	5	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Whenever	this	minion	survives	damage	,	summon	another	Grim	Patron	.
Module	body	ClassDef	name	GrimPatron	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	GrimPatron	^	^	^	Num	n	5	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	3	^	^	^	Num	n	3	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Damaged	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	List	elts	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	GrimPatron	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	health	^	^	^	Call	func	Name	id	SelfSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
ImpGangBoss	NAME_END	2	ATK_END	4	DEF_END	3	COST_END	-1	DUR_END	Minion	TYPE_END	Warlock	PLAYER_CLS_END	Demon	RACE_END	Common	RARITY_END	Whenever	this	minion	takes	damage	,	summon	a	1	/	1	Imp	.
Module	body	ClassDef	name	ImpGangBoss	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	ImpGangBoss	^	^	^	Num	n	3	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARLOCK	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DEMON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	2	^	^	^	Num	n	4	^	^	^	^	keywords	keyword	arg	effects	^	^	value	List	elts	Call	func	Name	id	Effect	^	^	^	^	args	Call	func	Name	id	Damaged	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	ActionTag	^	^	^	^	args	Call	func	Name	id	Summon	^	^	^	^	args	Call	func	Name	id	Imp	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
LavaShock	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Shaman	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	2	damage	.	NL	Unlock	your	<b>	Overloaded	</b>	Mana	Crystals	.
Module	body	ClassDef	name	LavaShock	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	LavaShock	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	SHAMAN	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Num	n	2	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	player	^	^	^	^	attr	upcoming_overload	^	^	^	^	value	Num	n	0	^	^	^	^	^	AugAssign	target	Attribute	value	Name	id	player	^	^	^	^	attr	mana	^	^	^	^	op	Add	^	^	value	Attribute	value	Name	id	player	^	^	^	^	attr	current_overload	^	^	^	^	^	Assign	targets	Attribute	value	Name	id	player	^	^	^	^	attr	current_overload	^	^	^	^	value	Num	n	0	^	^	^	^	^	^	returns	^	^	^	^	^	^	
MajordomoExecutus	NAME_END	9	ATK_END	7	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Deathrattle	</b>	Replace	your	hero	with	Ragnaros	,	the	Firelord	.
Module	body	ClassDef	name	MajordomoExecutus	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	MajordomoExecutus	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	9	^	^	^	Num	n	7	^	^	^	^	keywords	keyword	arg	deathrattle	^	^	value	List	elts	Call	func	Name	id	Deathrattle	^	^	^	^	args	Call	func	Name	id	Transform	^	^	^	^	args	Call	func	Name	id	Ragnaros	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Nefarian	NAME_END	8	ATK_END	8	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	Add	2	random	spells	to	your	hand	<i>	(	from	your	opponent's	class	)	</i>	.
Module	body	ClassDef	name	Nefarian	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Nefarian	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	AddCard	^	^	^	^	args	Call	func	Name	id	CardQuery	^	^	^	^	args	empty	^	^	keywords	keyword	arg	conditions	^	^	value	List	elts	Call	func	Name	id	IsClass	^	^	^	^	args	Call	func	Name	id	Attribute	^	^	^	^	args	Str	s	character_class	^	^	^	Call	func	Name	id	HeroSelector	^	^	^	^	args	Call	func	Name	id	EnemyPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	IsSpell	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	Num	n	2	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	PlayerSelector	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	8	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
QuickShot	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Hunter	PLAYER_CLS_END	NIL	RACE_END	Common	RARITY_END	Deal	$	3	damage	.	NL	If	your	hand	is	empty	,	draw	a	card	.
Module	body	ClassDef	name	QuickShot	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	QuickShot	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	HUNTER	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	target_func	^	^	value	Attribute	value	Attribute	value	Name	id	hearthbreaker	^	^	^	^	attr	targeting	^	^	^	^	attr	find_spell_target	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Attribute	value	Name	id	self	^	^	^	^	attr	target	^	^	^	^	attr	damage	^	^	^	^	args	Num	n	3	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	hand	^	^	^	^	keywords	empty	^	^	^	^	ops	Eq	^	^	comparators	Num	n	0	^	^	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	draw	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
RendBlackhand	NAME_END	8	ATK_END	4	DEF_END	7	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	Legendary	RARITY_END	<b>	Battlecry	</b>	If	you're	holding	a	Dragon	,	destroy	a	<b>	Legendary	</b>	minion	.
Module	body	ClassDef	name	RendBlackhand	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	RendBlackhand	^	^	^	Num	n	7	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	keyword	arg	battlecry	^	^	value	Call	func	Name	id	Battlecry	^	^	^	^	args	Call	func	Name	id	Kill	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	MinionSelector	^	^	^	^	args	Call	func	Name	id	And	^	^	^	^	args	Call	func	Name	id	MinionIsNotTarget	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	IsRarity	^	^	^	^	args	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	LEGENDARY	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	Call	func	Name	id	UserPicker	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	Call	func	Name	id	GreaterThan	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	CardSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	condition	^	^	value	Call	func	Name	id	IsType	^	^	^	^	args	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	keyword	arg	value	^	^	value	Num	n	0	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	8	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Resurrect	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Priest	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Summon	a	random	friendly	minion	that	died	this	game	.
Module	body	ClassDef	name	Resurrect	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Resurrect	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	PRIEST	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	ImportFrom	module	hearthbreaker.engine	^	^	names	alias	name	card_lookup	^	^	asname	^	^	^	level	0	^	^	^	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	BoolOp	op	And	^	^	values	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	graveyard	^	^	^	^	keywords	empty	^	^	^	^	ops	Gt	^	^	comparators	Num	n	0	^	^	^	^	^	Compare	left	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	ops	Lt	^	^	comparators	Num	n	7	^	^	^	^	^	^	^	^	body	Assign	targets	Name	id	card_name	^	^	^	^	value	Call	func	Attribute	value	Name	id	game	^	^	^	^	attr	random_choice	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	graveyard	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	card	^	^	^	^	value	Call	func	Name	id	card_lookup	^	^	^	^	args	Name	id	card_name	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	card	^	^	^	^	attr	summon	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	Call	func	Name	id	len	^	^	^	^	args	Attribute	value	Name	id	player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	returns	^	^	^	^	^	^	
Revenge	NAME_END	-1	ATK_END	-1	DEF_END	2	COST_END	-1	DUR_END	Spell	TYPE_END	Warrior	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	Deal	$	1	damage	to	all	minions	.	If	you	have	12	or	less	Health	,	deal	$	3	damage	instead	.
Module	body	ClassDef	name	Revenge	^	^	bases	Name	id	SpellCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Revenge	^	^	^	Num	n	2	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	WARRIOR	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	FunctionDef	name	use	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	arg	arg	game	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	use	^	^	^	^	args	Name	id	player	^	^	^	Name	id	game	^	^	^	^	keywords	empty	^	^	^	^	^	Assign	targets	Name	id	targets	^	^	^	^	value	Call	func	Attribute	value	Name	id	copy	^	^	^	^	attr	copy	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	other_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	Expr	value	Call	func	Attribute	value	Name	id	targets	^	^	^	^	attr	extend	^	^	^	^	args	Attribute	value	Attribute	value	Name	id	game	^	^	^	^	attr	current_player	^	^	^	^	attr	minions	^	^	^	^	keywords	empty	^	^	^	^	^	If	test	Compare	left	Attribute	value	Attribute	value	Name	id	player	^	^	^	^	attr	hero	^	^	^	^	attr	health	^	^	^	^	ops	LtE	^	^	comparators	Num	n	12	^	^	^	^	^	^	body	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	3	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	orelse	For	target	Name	id	minion	^	^	^	^	iter	Name	id	targets	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Name	id	minion	^	^	^	^	attr	damage	^	^	^	^	args	Call	func	Attribute	value	Name	id	player	^	^	^	^	attr	effective_spell_damage	^	^	^	^	args	Num	n	1	^	^	^	^	keywords	empty	^	^	^	Name	id	self	^	^	^	^	keywords	empty	^	^	^	^	^	^	orelse	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
VolcanicDrake	NAME_END	6	ATK_END	4	DEF_END	6	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	Common	RARITY_END	Costs	(	1	)	less	for	each	minion	that	died	this	turn	.
Module	body	ClassDef	name	VolcanicDrake	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	VolcanicDrake	^	^	^	Num	n	6	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	DeadMinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	6	^	^	^	Num	n	4	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
VolcanicLumberer	NAME_END	7	ATK_END	8	DEF_END	9	COST_END	-1	DUR_END	Minion	TYPE_END	Druid	PLAYER_CLS_END	NIL	RACE_END	Rare	RARITY_END	<b>	Taunt	</b>	NL	Costs	(	1	)	less	for	each	minion	that	died	this	turn	.
Module	body	ClassDef	name	VolcanicLumberer	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	VolcanicLumberer	^	^	^	Num	n	9	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	DRUID	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	RARE	^	^	^	^	keywords	keyword	arg	buffs	^	^	value	List	elts	Call	func	Name	id	Buff	^	^	^	^	args	Call	func	Name	id	ManaChange	^	^	^	^	args	Call	func	Name	id	Count	^	^	^	^	args	Call	func	Name	id	DeadMinionSelector	^	^	^	^	args	empty	^	^	keywords	keyword	arg	players	^	^	value	Call	func	Name	id	BothPlayer	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	^	^	^	^	keywords	empty	^	^	^	UnaryOp	op	USub	^	^	operand	Num	n	1	^	^	^	^	^	^	keywords	empty	^	^	^	^	keywords	empty	^	^	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	7	^	^	^	Num	n	8	^	^	^	^	keywords	keyword	arg	taunt	^	^	value	NameConstant	value	True	^	^	^	^	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Whelp	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Whelp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Whelp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Whelp	NAME_END	1	ATK_END	1	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	NIL	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Whelp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Whelp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
Whelp	NAME_END	2	ATK_END	2	DEF_END	1	COST_END	-1	DUR_END	Minion	TYPE_END	Neutral	PLAYER_CLS_END	Dragon	RACE_END	NIL	RARITY_END	NIL
Module	body	ClassDef	name	Whelp	^	^	bases	Name	id	MinionCard	^	^	^	^	keywords	empty	^	^	body	FunctionDef	name	__init__	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Expr	value	Call	func	Attribute	value	Call	func	Name	id	super	^	^	^	^	args	empty	^	^	keywords	empty	^	^	^	^	attr	__init__	^	^	^	^	args	Str	s	Whelp	^	^	^	Num	n	1	^	^	^	Attribute	value	Name	id	CHARACTER_CLASS	^	^	^	^	attr	ALL	^	^	^	Attribute	value	Name	id	CARD_RARITY	^	^	^	^	attr	COMMON	^	^	^	NameConstant	value	False	^	^	^	^	keywords	keyword	arg	minion_type	^	^	value	Attribute	value	Name	id	MINION_TYPE	^	^	^	^	attr	DRAGON	^	^	^	^	^	^	^	^	^	^	returns	^	^	FunctionDef	name	create_minion	^	^	args	arguments	args	arg	arg	self	^	^	annotation	^	^	arg	arg	player	^	^	annotation	^	^	^	kwonlyargs	empty	^	^	kw_defaults	empty	^	^	^	^	body	Return	value	Call	func	Name	id	Minion	^	^	^	^	args	Num	n	1	^	^	^	Num	n	1	^	^	^	^	keywords	empty	^	^	^	^	^	^	returns	^	^	^	^	^	^	
